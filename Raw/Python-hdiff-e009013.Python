executables/Languages/Python.hs:64:1-46: Splicing declarations
    deriveFamilyWith ''Singl [t| Module SrcSpan |]
  ======>
    type FamModuleSrcSpan =
        '[Module SrcSpan,
          [Statement SrcSpan],
          Statement SrcSpan,
          [ImportItem SrcSpan],
          SrcSpan,
          ImportRelative SrcSpan,
          FromItems SrcSpan,
          Expr SrcSpan,
          Suite SrcSpan,
          [Expr SrcSpan],
          Ident SrcSpan,
          [Parameter SrcSpan],
          Maybe (Expr SrcSpan),
          [Argument SrcSpan],
          [(Expr SrcSpan, Suite SrcSpan)],
          AssignOp SrcSpan,
          [Decorator SrcSpan],
          [Handler SrcSpan],
          RaiseExpr SrcSpan,
          [(Expr SrcSpan, Maybe (Expr SrcSpan))],
          [Ident SrcSpan],
          Maybe (Expr SrcSpan, Maybe (Expr SrcSpan)),
          ImportItem SrcSpan,
          DottedName SrcSpan,
          Maybe (Ident SrcSpan),
          Maybe (DottedName SrcSpan),
          [FromItem SrcSpan],
          FromItem SrcSpan,
          [String],
          [Slice SrcSpan],
          Op SrcSpan,
          Maybe (YieldArg SrcSpan),
          Comprehension SrcSpan,
          [DictKeyDatumList SrcSpan],
          Argument SrcSpan,
          Slice SrcSpan,
          Maybe (Maybe (Expr SrcSpan)),
          Parameter SrcSpan,
          ParamTuple SrcSpan,
          [ParamTuple SrcSpan],
          YieldArg SrcSpan,
          ComprehensionExpr SrcSpan,
          CompFor SrcSpan,
          DictKeyDatumList SrcSpan,
          Maybe (CompIter SrcSpan),
          CompIter SrcSpan,
          CompIf SrcSpan,
          (Expr SrcSpan, Suite SrcSpan),
          Decorator SrcSpan,
          Handler SrcSpan,
          ExceptClause SrcSpan,
          (Expr SrcSpan, Maybe (Expr SrcSpan)),
          Maybe (Expr SrcSpan, Maybe (Expr SrcSpan, Maybe (Expr SrcSpan))),
          (Expr SrcSpan, Maybe (Expr SrcSpan, Maybe (Expr SrcSpan)))]
    type CodesModuleSrcSpan =
        '['['[ 'I ( 'S  'Z)]],
          '['[], '[ 'I ( 'S ( 'S  'Z)),  'I ( 'S  'Z)]],
          '['[ 'I ( 'S ( 'S ( 'S  'Z))),  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S  'Z)),  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S  'Z)),  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))),
               'I ( 'S ( 'S  'Z)),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S  'Z)),  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KBool,
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'K  'KBool,
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S  'Z)))]],
          '['[ 'K  'KString,  'K  'KInt,  'K  'KInt,  'K  'KInt],
            '[ 'K  'KString,  'K  'KInt,  'K  'KInt,  'K  'KInt,  'K  'KInt],
            '[ 'K  'KString,  'K  'KInt,  'K  'KInt],
            '[]],
          '['[ 'K  'KInt,
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KInteger,  'K  'KString,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KInteger,  'K  'KString,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KDouble,  'K  'KString,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KDouble,  'K  'KString,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'K  'KBool,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S  'Z)),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))]],
          '['[ 'K  'KString,  'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))]],
          '['[], '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'K  'KString,
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))]],
          '['[ 'K  'KBool,
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))),
               'I ( 'S ( 'S ( 'S ( 'S  'Z))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))]],
          '['[],
            '[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))))]],
          '['[ 'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))),
               'I ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))]]]
    pattern IdxModuleSrcSpan = SZ
    pattern IdxListStatementSrcSpan = SS SZ
    pattern IdxStatementSrcSpan = SS (SS SZ)
    pattern IdxListImportItemSrcSpan = SS (SS (SS SZ))
    pattern IdxSrcSpan = SS (SS (SS (SS SZ)))
    pattern IdxImportRelativeSrcSpan = SS (SS (SS (SS (SS SZ))))
    pattern IdxFromItemsSrcSpan = SS (SS (SS (SS (SS (SS SZ)))))
    pattern IdxExprSrcSpan = SS (SS (SS (SS (SS (SS (SS SZ))))))
    pattern IdxSuiteSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))
    pattern IdxListExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))
    pattern IdxIdentSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))
    pattern IdxListParameterSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))
    pattern IdxMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))
    pattern IdxListArgumentSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))
    pattern IdxListTup1ExprSrcSpanSuiteSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))
    pattern IdxAssignOpSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))
    pattern IdxListDecoratorSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))
    pattern IdxListHandlerSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))
    pattern IdxRaiseExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))
    pattern IdxListTup1ExprSrcSpanMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))
    pattern IdxListIdentSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))
    pattern IdxMaybeTup1ExprSrcSpanMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))
    pattern IdxImportItemSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))
    pattern IdxDottedNameSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))
    pattern IdxMaybeIdentSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))
    pattern IdxMaybeDottedNameSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))
    pattern IdxListFromItemSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))
    pattern IdxFromItemSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))
    pattern IdxListString = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))
    pattern IdxListSliceSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))
    pattern IdxOpSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))
    pattern IdxMaybeYieldArgSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))
    pattern IdxComprehensionSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))
    pattern IdxListDictKeyDatumListSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))
    pattern IdxArgumentSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))
    pattern IdxSliceSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))
    pattern IdxMaybeMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))
    pattern IdxParameterSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))
    pattern IdxParamTupleSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))
    pattern IdxListParamTupleSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))
    pattern IdxYieldArgSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))
    pattern IdxComprehensionExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))
    pattern IdxCompForSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))
    pattern IdxDictKeyDatumListSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))
    pattern IdxMaybeCompIterSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))
    pattern IdxCompIterSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxCompIfSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxTup1ExprSrcSpanSuiteSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxDecoratorSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxHandlerSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxExceptClauseSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxTup1ExprSrcSpanMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxMaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))))))
    pattern IdxTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan = SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))))))
    pattern ModuleSrcSpanModule_ ::
              phi_ajgp ( 'S  'Z)
              -> View kon_ajgq phi_ajgp (Lkup  'Z CodesModuleSrcSpan)
    pattern ModuleSrcSpanModule_ p_ajgo = Tag CZ (NA_I p_ajgo :* Nil)
    pattern ListStatementSrcSpan_Ifx0 ::
              View kon_ajgs phi_ajgr (Lkup ( 'S  'Z) CodesModuleSrcSpan)
    pattern ListStatementSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListStatementSrcSpan_Ifx1 ::
              phi_ajgv ( 'S ( 'S  'Z))
              -> phi_ajgv ( 'S  'Z)
                 -> View kon_ajgw phi_ajgv (Lkup ( 'S  'Z) CodesModuleSrcSpan)
    pattern ListStatementSrcSpan_Ifx1 p_ajgt p_ajgu = Tag (CS CZ)
                                                          (NA_I p_ajgt :* (NA_I p_ajgu :* Nil))
    pattern StatementSrcSpanImport_ ::
              phi_ajgz ( 'S ( 'S ( 'S  'Z)))
              -> phi_ajgz ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajgA phi_ajgz (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanImport_ p_ajgx p_ajgy = Tag CZ
                                                        (NA_I p_ajgx :* (NA_I p_ajgy :* Nil))
    pattern StatementSrcSpanFromImport_ ::
              phi_ajgE ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))
              -> phi_ajgE ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))
                 -> phi_ajgE ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajgF phi_ajgE (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanFromImport_ p_ajgB p_ajgC p_ajgD = Tag (CS CZ)
                                                                   (NA_I p_ajgB :* (NA_I p_ajgC :* (NA_I p_ajgD :* Nil)))
    pattern StatementSrcSpanWhile_ ::
              phi_ajgK ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajgK ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> phi_ajgK ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                    -> phi_ajgK ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajgL phi_ajgK (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanWhile_ p_ajgG p_ajgH p_ajgI p_ajgJ = Tag (CS (CS CZ))
                                                                     (NA_I p_ajgG :* (NA_I p_ajgH :* (NA_I p_ajgI :* (NA_I p_ajgJ :* Nil))))
    pattern StatementSrcSpanFor_ ::
              phi_ajgR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajgR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajgR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                    -> phi_ajgR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                       -> phi_ajgR ( 'S ( 'S ( 'S ( 'S  'Z))))
                          -> View kon_ajgS phi_ajgR (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanFor_ p_ajgM p_ajgN p_ajgO p_ajgP p_ajgQ = Tag (CS (CS (CS CZ)))
                                                                          (NA_I p_ajgM :* (NA_I p_ajgN :* (NA_I p_ajgO :* (NA_I p_ajgP :* (NA_I p_ajgQ :* Nil)))))
    pattern StatementSrcSpanAsyncFor_ ::
              phi_ajgV ( 'S ( 'S  'Z))
              -> phi_ajgV ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajgW phi_ajgV (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAsyncFor_ p_ajgT p_ajgU = Tag (CS (CS (CS (CS CZ))))
                                                          (NA_I p_ajgT :* (NA_I p_ajgU :* Nil))
    pattern StatementSrcSpanFun_ ::
              phi_ajh2 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajh2 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))
                 -> phi_ajh2 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                    -> phi_ajh2 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                       -> phi_ajh2 ( 'S ( 'S ( 'S ( 'S  'Z))))
                          -> View kon_ajh3 phi_ajh2 (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanFun_ p_ajgX p_ajgY p_ajgZ p_ajh0 p_ajh1 = Tag (CS (CS (CS (CS (CS CZ)))))
                                                                          (NA_I p_ajgX :* (NA_I p_ajgY :* (NA_I p_ajgZ :* (NA_I p_ajh0 :* (NA_I p_ajh1 :* Nil)))))
    pattern StatementSrcSpanAsyncFun_ ::
              phi_ajh6 ( 'S ( 'S  'Z))
              -> phi_ajh6 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajh7 phi_ajh6 (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAsyncFun_ p_ajh4 p_ajh5 = Tag (CS (CS (CS (CS (CS (CS CZ))))))
                                                          (NA_I p_ajh4 :* (NA_I p_ajh5 :* Nil))
    pattern StatementSrcSpanClass_ ::
              phi_ajhc ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajhc ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))
                 -> phi_ajhc ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                    -> phi_ajhc ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajhd phi_ajhc (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanClass_ p_ajh8 p_ajh9 p_ajha p_ajhb = Tag (CS (CS (CS (CS (CS (CS (CS CZ)))))))
                                                                     (NA_I p_ajh8 :* (NA_I p_ajh9 :* (NA_I p_ajha :* (NA_I p_ajhb :* Nil))))
    pattern StatementSrcSpanConditional_ ::
              phi_ajhh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))
              -> phi_ajhh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> phi_ajhh ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajhi phi_ajhh (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanConditional_ p_ajhe p_ajhf p_ajhg = Tag (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))
                                                                    (NA_I p_ajhe :* (NA_I p_ajhf :* (NA_I p_ajhg :* Nil)))
    pattern StatementSrcSpanAssign_ ::
              phi_ajhm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajhm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajhm ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajhn phi_ajhm (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAssign_ p_ajhj p_ajhk p_ajhl = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))
                                                               (NA_I p_ajhj :* (NA_I p_ajhk :* (NA_I p_ajhl :* Nil)))
    pattern StatementSrcSpanAugmentedAssign_ ::
              phi_ajhs ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajhs ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))
                 -> phi_ajhs ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                    -> phi_ajhs ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajht phi_ajhs (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAugmentedAssign_ p_ajho p_ajhp p_ajhq p_ajhr = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))
                                                                               (NA_I p_ajho :* (NA_I p_ajhp :* (NA_I p_ajhq :* (NA_I p_ajhr :* Nil))))
    pattern StatementSrcSpanAnnotatedAssign_ ::
              phi_ajhy ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajhy ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajhy ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                    -> phi_ajhy ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajhz phi_ajhy (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAnnotatedAssign_ p_ajhu p_ajhv p_ajhw p_ajhx = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))
                                                                               (NA_I p_ajhu :* (NA_I p_ajhv :* (NA_I p_ajhw :* (NA_I p_ajhx :* Nil))))
    pattern StatementSrcSpanDecorated_ ::
              phi_ajhD ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))
              -> phi_ajhD ( 'S ( 'S  'Z))
                 -> phi_ajhD ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajhE phi_ajhD (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanDecorated_ p_ajhA p_ajhB p_ajhC = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))
                                                                  (NA_I p_ajhA :* (NA_I p_ajhB :* (NA_I p_ajhC :* Nil)))
    pattern StatementSrcSpanReturn_ ::
              phi_ajhH ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
              -> phi_ajhH ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajhI phi_ajhH (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanReturn_ p_ajhF p_ajhG = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))
                                                        (NA_I p_ajhF :* (NA_I p_ajhG :* Nil))
    pattern StatementSrcSpanTry_ ::
              phi_ajhO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
              -> phi_ajhO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))
                 -> phi_ajhO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                    -> phi_ajhO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                       -> phi_ajhO ( 'S ( 'S ( 'S ( 'S  'Z))))
                          -> View kon_ajhP phi_ajhO (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanTry_ p_ajhJ p_ajhK p_ajhL p_ajhM p_ajhN = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))
                                                                          (NA_I p_ajhJ :* (NA_I p_ajhK :* (NA_I p_ajhL :* (NA_I p_ajhM :* (NA_I p_ajhN :* Nil)))))
    pattern StatementSrcSpanRaise_ ::
              phi_ajhS ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))
              -> phi_ajhS ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajhT phi_ajhS (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanRaise_ p_ajhQ p_ajhR = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))
                                                       (NA_I p_ajhQ :* (NA_I p_ajhR :* Nil))
    pattern StatementSrcSpanWith_ ::
              phi_ajhX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))
              -> phi_ajhX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> phi_ajhX ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajhY phi_ajhX (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanWith_ p_ajhU p_ajhV p_ajhW = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))
                                                             (NA_I p_ajhU :* (NA_I p_ajhV :* (NA_I p_ajhW :* Nil)))
    pattern StatementSrcSpanAsyncWith_ ::
              phi_aji1 ( 'S ( 'S  'Z))
              -> phi_aji1 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_aji2 phi_aji1 (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAsyncWith_ p_ajhZ p_aji0 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))
                                                           (NA_I p_ajhZ :* (NA_I p_aji0 :* Nil))
    pattern StatementSrcSpanPass_ ::
              phi_aji4 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_aji5 phi_aji4 (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanPass_ p_aji3 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))
                                               (NA_I p_aji3 :* Nil)
    pattern StatementSrcSpanBreak_ ::
              phi_aji7 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_aji8 phi_aji7 (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanBreak_ p_aji6 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))
                                                (NA_I p_aji6 :* Nil)
    pattern StatementSrcSpanContinue_ ::
              phi_ajia ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajib phi_ajia (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanContinue_ p_aji9 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))
                                                   (NA_I p_aji9 :* Nil)
    pattern StatementSrcSpanDelete_ ::
              phi_ajie ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajie ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajif phi_ajie (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanDelete_ p_ajic p_ajid = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))
                                                        (NA_I p_ajic :* (NA_I p_ajid :* Nil))
    pattern StatementSrcSpanStmtExpr_ ::
              phi_ajii ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajii ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajij phi_ajii (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanStmtExpr_ p_ajig p_ajih = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))
                                                          (NA_I p_ajig :* (NA_I p_ajih :* Nil))
    pattern StatementSrcSpanGlobal_ ::
              phi_ajim ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))
              -> phi_ajim ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajin phi_ajim (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanGlobal_ p_ajik p_ajil = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))
                                                        (NA_I p_ajik :* (NA_I p_ajil :* Nil))
    pattern StatementSrcSpanNonLocal_ ::
              phi_ajiq ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))
              -> phi_ajiq ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajir phi_ajiq (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanNonLocal_ p_ajio p_ajip = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))
                                                          (NA_I p_ajio :* (NA_I p_ajip :* Nil))
    pattern StatementSrcSpanAssert_ ::
              phi_ajiu ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajiu ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajiv phi_ajiu (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanAssert_ p_ajis p_ajit = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))
                                                        (NA_I p_ajis :* (NA_I p_ajit :* Nil))
    pattern StatementSrcSpanPrint_ ::
              kon_ajiB  'KBool
              -> phi_ajiA ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
                 -> kon_ajiB  'KBool
                    -> phi_ajiA ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajiB phi_ajiA (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanPrint_ p_ajiw p_ajix p_ajiy p_ajiz = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))))
                                                                     (NA_K p_ajiw :* (NA_I p_ajix :* (NA_K p_ajiy :* (NA_I p_ajiz :* Nil))))
    pattern StatementSrcSpanExec_ ::
              phi_ajiF ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajiF ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))
                 -> phi_ajiF ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajiG phi_ajiF (Lkup ( 'S ( 'S  'Z)) CodesModuleSrcSpan)
    pattern StatementSrcSpanExec_ p_ajiC p_ajiD p_ajiE = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))))
                                                             (NA_I p_ajiC :* (NA_I p_ajiD :* (NA_I p_ajiE :* Nil)))
    pattern ListImportItemSrcSpan_Ifx0 ::
              View kon_ajiI phi_ajiH (Lkup ( 'S ( 'S ( 'S  'Z))) CodesModuleSrcSpan)
    pattern ListImportItemSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListImportItemSrcSpan_Ifx1 ::
              phi_ajiL ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))
              -> phi_ajiL ( 'S ( 'S ( 'S  'Z)))
                 -> View kon_ajiM phi_ajiL (Lkup ( 'S ( 'S ( 'S  'Z))) CodesModuleSrcSpan)
    pattern ListImportItemSrcSpan_Ifx1 p_ajiJ p_ajiK = Tag (CS CZ)
                                                           (NA_I p_ajiJ :* (NA_I p_ajiK :* Nil))
    pattern SpanCoLinear_ ::
              kon_ajiS  'KString
              -> kon_ajiS  'KInt
                 -> kon_ajiS  'KInt
                    -> kon_ajiS  'KInt
                       -> View kon_ajiS phi_ajiR (Lkup ( 'S ( 'S ( 'S ( 'S  'Z)))) CodesModuleSrcSpan)
    pattern SpanCoLinear_ p_ajiN p_ajiO p_ajiP p_ajiQ = Tag CZ
                                                            (NA_K p_ajiN :* (NA_K p_ajiO :* (NA_K p_ajiP :* (NA_K p_ajiQ :* Nil))))
    pattern SpanMultiLine_ ::
              kon_ajiZ  'KString
              -> kon_ajiZ  'KInt
                 -> kon_ajiZ  'KInt
                    -> kon_ajiZ  'KInt
                       -> kon_ajiZ  'KInt
                          -> View kon_ajiZ phi_ajiY (Lkup ( 'S ( 'S ( 'S ( 'S  'Z)))) CodesModuleSrcSpan)
    pattern SpanMultiLine_ p_ajiT p_ajiU p_ajiV p_ajiW p_ajiX = Tag (CS CZ)
                                                                    (NA_K p_ajiT :* (NA_K p_ajiU :* (NA_K p_ajiV :* (NA_K p_ajiW :* (NA_K p_ajiX :* Nil)))))
    pattern SpanPoint_ ::
              kon_ajj4  'KString
              -> kon_ajj4  'KInt
                 -> kon_ajj4  'KInt
                    -> View kon_ajj4 phi_ajj3 (Lkup ( 'S ( 'S ( 'S ( 'S  'Z)))) CodesModuleSrcSpan)
    pattern SpanPoint_ p_ajj0 p_ajj1 p_ajj2 = Tag (CS (CS CZ))
                                                  (NA_K p_ajj0 :* (NA_K p_ajj1 :* (NA_K p_ajj2 :* Nil)))
    pattern SpanEmpty_ ::
              View kon_ajj6 phi_ajj5 (Lkup ( 'S ( 'S ( 'S ( 'S  'Z)))) CodesModuleSrcSpan)
    pattern SpanEmpty_ = Tag (CS (CS (CS CZ))) Nil
    pattern ImportRelativeSrcSpanImportRelative_ ::
              kon_ajjb  'KInt
              -> phi_ajja ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))
                 -> phi_ajja ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajjb phi_ajja (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))) CodesModuleSrcSpan)
    pattern ImportRelativeSrcSpanImportRelative_ p_ajj7 p_ajj8 p_ajj9 = Tag CZ
                                                                            (NA_K p_ajj7 :* (NA_I p_ajj8 :* (NA_I p_ajj9 :* Nil)))
    pattern FromItemsSrcSpanImportEverything_ ::
              phi_ajjd ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajje phi_ajjd (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))) CodesModuleSrcSpan)
    pattern FromItemsSrcSpanImportEverything_ p_ajjc = Tag CZ
                                                           (NA_I p_ajjc :* Nil)
    pattern FromItemsSrcSpanFromItems_ ::
              phi_ajjh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))
              -> phi_ajjh ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajji phi_ajjh (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))) CodesModuleSrcSpan)
    pattern FromItemsSrcSpanFromItems_ p_ajjf p_ajjg = Tag (CS CZ)
                                                           (NA_I p_ajjf :* (NA_I p_ajjg :* Nil))
    pattern ExprSrcSpanVar_ ::
              phi_ajjl ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajjl ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajjm phi_ajjl (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanVar_ p_ajjj p_ajjk = Tag CZ
                                                (NA_I p_ajjj :* (NA_I p_ajjk :* Nil))
    pattern ExprSrcSpanInt_ ::
              kon_ajjr  'KInteger
              -> kon_ajjr  'KString
                 -> phi_ajjq ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajjr phi_ajjq (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanInt_ p_ajjn p_ajjo p_ajjp = Tag (CS CZ)
                                                       (NA_K p_ajjn :* (NA_K p_ajjo :* (NA_I p_ajjp :* Nil)))
    pattern ExprSrcSpanLongInt_ ::
              kon_ajjw  'KInteger
              -> kon_ajjw  'KString
                 -> phi_ajjv ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajjw phi_ajjv (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanLongInt_ p_ajjs p_ajjt p_ajju = Tag (CS (CS CZ))
                                                           (NA_K p_ajjs :* (NA_K p_ajjt :* (NA_I p_ajju :* Nil)))
    pattern ExprSrcSpanFloat_ ::
              kon_ajjB  'KDouble
              -> kon_ajjB  'KString
                 -> phi_ajjA ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajjB phi_ajjA (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanFloat_ p_ajjx p_ajjy p_ajjz = Tag (CS (CS (CS CZ)))
                                                         (NA_K p_ajjx :* (NA_K p_ajjy :* (NA_I p_ajjz :* Nil)))
    pattern ExprSrcSpanImaginary_ ::
              kon_ajjG  'KDouble
              -> kon_ajjG  'KString
                 -> phi_ajjF ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajjG phi_ajjF (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanImaginary_ p_ajjC p_ajjD p_ajjE = Tag (CS (CS (CS (CS CZ))))
                                                             (NA_K p_ajjC :* (NA_K p_ajjD :* (NA_I p_ajjE :* Nil)))
    pattern ExprSrcSpanBool_ ::
              kon_ajjK  'KBool
              -> phi_ajjJ ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajjK phi_ajjJ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanBool_ p_ajjH p_ajjI = Tag (CS (CS (CS (CS (CS CZ)))))
                                                 (NA_K p_ajjH :* (NA_I p_ajjI :* Nil))
    pattern ExprSrcSpanNone_ ::
              phi_ajjM ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajjN phi_ajjM (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanNone_ p_ajjL = Tag (CS (CS (CS (CS (CS (CS CZ))))))
                                          (NA_I p_ajjL :* Nil)
    pattern ExprSrcSpanEllipsis_ ::
              phi_ajjP ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajjQ phi_ajjP (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanEllipsis_ p_ajjO = Tag (CS (CS (CS (CS (CS (CS (CS CZ)))))))
                                              (NA_I p_ajjO :* Nil)
    pattern ExprSrcSpanByteStrings_ ::
              phi_ajjT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))
              -> phi_ajjT ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajjU phi_ajjT (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanByteStrings_ p_ajjR p_ajjS = Tag (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))
                                                        (NA_I p_ajjR :* (NA_I p_ajjS :* Nil))
    pattern ExprSrcSpanStrings_ ::
              phi_ajjX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))
              -> phi_ajjX ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajjY phi_ajjX (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanStrings_ p_ajjV p_ajjW = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))
                                                    (NA_I p_ajjV :* (NA_I p_ajjW :* Nil))
    pattern ExprSrcSpanUnicodeStrings_ ::
              phi_ajk1 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))
              -> phi_ajk1 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajk2 phi_ajk1 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanUnicodeStrings_ p_ajjZ p_ajk0 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))
                                                           (NA_I p_ajjZ :* (NA_I p_ajk0 :* Nil))
    pattern ExprSrcSpanCall_ ::
              phi_ajk6 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajk6 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))
                 -> phi_ajk6 ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajk7 phi_ajk6 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanCall_ p_ajk3 p_ajk4 p_ajk5 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))
                                                        (NA_I p_ajk3 :* (NA_I p_ajk4 :* (NA_I p_ajk5 :* Nil)))
    pattern ExprSrcSpanSubscript_ ::
              phi_ajkb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajkb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajkb ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajkc phi_ajkb (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanSubscript_ p_ajk8 p_ajk9 p_ajka = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))
                                                             (NA_I p_ajk8 :* (NA_I p_ajk9 :* (NA_I p_ajka :* Nil)))
    pattern ExprSrcSpanSlicedExpr_ ::
              phi_ajkg ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajkg ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))
                 -> phi_ajkg ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajkh phi_ajkg (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanSlicedExpr_ p_ajkd p_ajke p_ajkf = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))
                                                              (NA_I p_ajkd :* (NA_I p_ajke :* (NA_I p_ajkf :* Nil)))
    pattern ExprSrcSpanCondExpr_ ::
              phi_ajkm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajkm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajkm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                    -> phi_ajkm ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajkn phi_ajkm (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanCondExpr_ p_ajki p_ajkj p_ajkk p_ajkl = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))
                                                                   (NA_I p_ajki :* (NA_I p_ajkj :* (NA_I p_ajkk :* (NA_I p_ajkl :* Nil))))
    pattern ExprSrcSpanBinaryOp_ ::
              phi_ajks ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))
              -> phi_ajks ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajks ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                    -> phi_ajks ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajkt phi_ajks (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanBinaryOp_ p_ajko p_ajkp p_ajkq p_ajkr = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))
                                                                   (NA_I p_ajko :* (NA_I p_ajkp :* (NA_I p_ajkq :* (NA_I p_ajkr :* Nil))))
    pattern ExprSrcSpanUnaryOp_ ::
              phi_ajkx ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))
              -> phi_ajkx ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajkx ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajky phi_ajkx (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanUnaryOp_ p_ajku p_ajkv p_ajkw = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))
                                                           (NA_I p_ajku :* (NA_I p_ajkv :* (NA_I p_ajkw :* Nil)))
    pattern ExprSrcSpanDot_ ::
              phi_ajkC ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajkC ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
                 -> phi_ajkC ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajkD phi_ajkC (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanDot_ p_ajkz p_ajkA p_ajkB = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))
                                                       (NA_I p_ajkz :* (NA_I p_ajkA :* (NA_I p_ajkB :* Nil)))
    pattern ExprSrcSpanLambda_ ::
              phi_ajkH ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))
              -> phi_ajkH ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajkH ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajkI phi_ajkH (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanLambda_ p_ajkE p_ajkF p_ajkG = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))
                                                          (NA_I p_ajkE :* (NA_I p_ajkF :* (NA_I p_ajkG :* Nil)))
    pattern ExprSrcSpanTuple_ ::
              phi_ajkL ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajkL ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajkM phi_ajkL (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanTuple_ p_ajkJ p_ajkK = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))
                                                  (NA_I p_ajkJ :* (NA_I p_ajkK :* Nil))
    pattern ExprSrcSpanYield_ ::
              phi_ajkP ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))
              -> phi_ajkP ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajkQ phi_ajkP (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanYield_ p_ajkN p_ajkO = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))
                                                  (NA_I p_ajkN :* (NA_I p_ajkO :* Nil))
    pattern ExprSrcSpanGenerator_ ::
              phi_ajkT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))
              -> phi_ajkT ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajkU phi_ajkT (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanGenerator_ p_ajkR p_ajkS = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))
                                                      (NA_I p_ajkR :* (NA_I p_ajkS :* Nil))
    pattern ExprSrcSpanAwait_ ::
              phi_ajkX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajkX ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajkY phi_ajkX (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanAwait_ p_ajkV p_ajkW = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))
                                                  (NA_I p_ajkV :* (NA_I p_ajkW :* Nil))
    pattern ExprSrcSpanListComp_ ::
              phi_ajl1 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))
              -> phi_ajl1 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajl2 phi_ajl1 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanListComp_ p_ajkZ p_ajl0 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))
                                                     (NA_I p_ajkZ :* (NA_I p_ajl0 :* Nil))
    pattern ExprSrcSpanList_ ::
              phi_ajl5 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajl5 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajl6 phi_ajl5 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanList_ p_ajl3 p_ajl4 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))
                                                 (NA_I p_ajl3 :* (NA_I p_ajl4 :* Nil))
    pattern ExprSrcSpanDictionary_ ::
              phi_ajl9 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))
              -> phi_ajl9 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajla phi_ajl9 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanDictionary_ p_ajl7 p_ajl8 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))
                                                       (NA_I p_ajl7 :* (NA_I p_ajl8 :* Nil))
    pattern ExprSrcSpanDictComp_ ::
              phi_ajld ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))
              -> phi_ajld ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajle phi_ajld (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanDictComp_ p_ajlb p_ajlc = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))))
                                                     (NA_I p_ajlb :* (NA_I p_ajlc :* Nil))
    pattern ExprSrcSpanSet_ ::
              phi_ajlh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
              -> phi_ajlh ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajli phi_ajlh (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanSet_ p_ajlf p_ajlg = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))))
                                                (NA_I p_ajlf :* (NA_I p_ajlg :* Nil))
    pattern ExprSrcSpanSetComp_ ::
              phi_ajll ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))
              -> phi_ajll ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajlm phi_ajll (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanSetComp_ p_ajlj p_ajlk = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))))))
                                                    (NA_I p_ajlj :* (NA_I p_ajlk :* Nil))
    pattern ExprSrcSpanStarred_ ::
              phi_ajlp ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajlp ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajlq phi_ajlp (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanStarred_ p_ajln p_ajlo = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))))))
                                                    (NA_I p_ajln :* (NA_I p_ajlo :* Nil))
    pattern ExprSrcSpanParen_ ::
              phi_ajlt ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajlt ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajlu phi_ajlt (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanParen_ p_ajlr p_ajls = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))))))))
                                                  (NA_I p_ajlr :* (NA_I p_ajls :* Nil))
    pattern ExprSrcSpanStringConversion_ ::
              phi_ajlx ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajlx ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajly phi_ajlx (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))) CodesModuleSrcSpan)
    pattern ExprSrcSpanStringConversion_ p_ajlv p_ajlw = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))))))))
                                                             (NA_I p_ajlv :* (NA_I p_ajlw :* Nil))
    pattern SuiteSrcSpan_Ifx0 ::
              View kon_ajlA phi_ajlz (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))) CodesModuleSrcSpan)
    pattern SuiteSrcSpan_Ifx0 = Tag CZ Nil
    pattern SuiteSrcSpan_Ifx1 ::
              phi_ajlD ( 'S ( 'S  'Z))
              -> phi_ajlD ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> View kon_ajlE phi_ajlD (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))) CodesModuleSrcSpan)
    pattern SuiteSrcSpan_Ifx1 p_ajlB p_ajlC = Tag (CS CZ)
                                                  (NA_I p_ajlB :* (NA_I p_ajlC :* Nil))
    pattern ListExprSrcSpan_Ifx0 ::
              View kon_ajlG phi_ajlF (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))) CodesModuleSrcSpan)
    pattern ListExprSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListExprSrcSpan_Ifx1 ::
              phi_ajlJ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajlJ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
                 -> View kon_ajlK phi_ajlJ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))) CodesModuleSrcSpan)
    pattern ListExprSrcSpan_Ifx1 p_ajlH p_ajlI = Tag (CS CZ)
                                                     (NA_I p_ajlH :* (NA_I p_ajlI :* Nil))
    pattern IdentSrcSpanIdent_ ::
              kon_ajlO  'KString
              -> phi_ajlN ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajlO phi_ajlN (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))) CodesModuleSrcSpan)
    pattern IdentSrcSpanIdent_ p_ajlL p_ajlM = Tag CZ
                                                   (NA_K p_ajlL :* (NA_I p_ajlM :* Nil))
    pattern ListParameterSrcSpan_Ifx0 ::
              View kon_ajlQ phi_ajlP (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))) CodesModuleSrcSpan)
    pattern ListParameterSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListParameterSrcSpan_Ifx1 ::
              phi_ajlT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))
              -> phi_ajlT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))
                 -> View kon_ajlU phi_ajlT (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))) CodesModuleSrcSpan)
    pattern ListParameterSrcSpan_Ifx1 p_ajlR p_ajlS = Tag (CS CZ)
                                                          (NA_I p_ajlR :* (NA_I p_ajlS :* Nil))
    pattern MaybeExprSrcSpanNothing_ ::
              View kon_ajlW phi_ajlV (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))) CodesModuleSrcSpan)
    pattern MaybeExprSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeExprSrcSpanJust_ ::
              phi_ajlY ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> View kon_ajlZ phi_ajlY (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))) CodesModuleSrcSpan)
    pattern MaybeExprSrcSpanJust_ p_ajlX = Tag (CS CZ)
                                               (NA_I p_ajlX :* Nil)
    pattern ListArgumentSrcSpan_Ifx0 ::
              View kon_ajm1 phi_ajm0 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))) CodesModuleSrcSpan)
    pattern ListArgumentSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListArgumentSrcSpan_Ifx1 ::
              phi_ajm4 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))
              -> phi_ajm4 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))
                 -> View kon_ajm5 phi_ajm4 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))) CodesModuleSrcSpan)
    pattern ListArgumentSrcSpan_Ifx1 p_ajm2 p_ajm3 = Tag (CS CZ)
                                                         (NA_I p_ajm2 :* (NA_I p_ajm3 :* Nil))
    pattern ListTup1ExprSrcSpanSuiteSrcSpan_Ifx0 ::
              View kon_ajm7 phi_ajm6 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))) CodesModuleSrcSpan)
    pattern ListTup1ExprSrcSpanSuiteSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListTup1ExprSrcSpanSuiteSrcSpan_Ifx1 ::
              phi_ajma ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajma ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))
                 -> View kon_ajmb phi_ajma (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))) CodesModuleSrcSpan)
    pattern ListTup1ExprSrcSpanSuiteSrcSpan_Ifx1 p_ajm8 p_ajm9 = Tag (CS CZ)
                                                                     (NA_I p_ajm8 :* (NA_I p_ajm9 :* Nil))
    pattern AssignOpSrcSpanPlusAssign_ ::
              phi_ajmd ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajme phi_ajmd (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanPlusAssign_ p_ajmc = Tag CZ
                                                    (NA_I p_ajmc :* Nil)
    pattern AssignOpSrcSpanMinusAssign_ ::
              phi_ajmg ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmh phi_ajmg (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanMinusAssign_ p_ajmf = Tag (CS CZ)
                                                     (NA_I p_ajmf :* Nil)
    pattern AssignOpSrcSpanMultAssign_ ::
              phi_ajmj ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmk phi_ajmj (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanMultAssign_ p_ajmi = Tag (CS (CS CZ))
                                                    (NA_I p_ajmi :* Nil)
    pattern AssignOpSrcSpanDivAssign_ ::
              phi_ajmm ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmn phi_ajmm (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanDivAssign_ p_ajml = Tag (CS (CS (CS CZ)))
                                                   (NA_I p_ajml :* Nil)
    pattern AssignOpSrcSpanModAssign_ ::
              phi_ajmp ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmq phi_ajmp (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanModAssign_ p_ajmo = Tag (CS (CS (CS (CS CZ))))
                                                   (NA_I p_ajmo :* Nil)
    pattern AssignOpSrcSpanPowAssign_ ::
              phi_ajms ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmt phi_ajms (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanPowAssign_ p_ajmr = Tag (CS (CS (CS (CS (CS CZ)))))
                                                   (NA_I p_ajmr :* Nil)
    pattern AssignOpSrcSpanBinAndAssign_ ::
              phi_ajmv ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmw phi_ajmv (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanBinAndAssign_ p_ajmu = Tag (CS (CS (CS (CS (CS (CS CZ))))))
                                                      (NA_I p_ajmu :* Nil)
    pattern AssignOpSrcSpanBinOrAssign_ ::
              phi_ajmy ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmz phi_ajmy (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanBinOrAssign_ p_ajmx = Tag (CS (CS (CS (CS (CS (CS (CS CZ)))))))
                                                     (NA_I p_ajmx :* Nil)
    pattern AssignOpSrcSpanBinXorAssign_ ::
              phi_ajmB ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmC phi_ajmB (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanBinXorAssign_ p_ajmA = Tag (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))
                                                      (NA_I p_ajmA :* Nil)
    pattern AssignOpSrcSpanLeftShiftAssign_ ::
              phi_ajmE ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmF phi_ajmE (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanLeftShiftAssign_ p_ajmD = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))
                                                         (NA_I p_ajmD :* Nil)
    pattern AssignOpSrcSpanRightShiftAssign_ ::
              phi_ajmH ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmI phi_ajmH (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanRightShiftAssign_ p_ajmG = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))
                                                          (NA_I p_ajmG :* Nil)
    pattern AssignOpSrcSpanFloorDivAssign_ ::
              phi_ajmK ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmL phi_ajmK (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanFloorDivAssign_ p_ajmJ = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))
                                                        (NA_I p_ajmJ :* Nil)
    pattern AssignOpSrcSpanMatrixMultAssign_ ::
              phi_ajmN ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajmO phi_ajmN (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))) CodesModuleSrcSpan)
    pattern AssignOpSrcSpanMatrixMultAssign_ p_ajmM = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))
                                                          (NA_I p_ajmM :* Nil)
    pattern ListDecoratorSrcSpan_Ifx0 ::
              View kon_ajmQ phi_ajmP (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))) CodesModuleSrcSpan)
    pattern ListDecoratorSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListDecoratorSrcSpan_Ifx1 ::
              phi_ajmT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajmT ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))
                 -> View kon_ajmU phi_ajmT (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))) CodesModuleSrcSpan)
    pattern ListDecoratorSrcSpan_Ifx1 p_ajmR p_ajmS = Tag (CS CZ)
                                                          (NA_I p_ajmR :* (NA_I p_ajmS :* Nil))
    pattern ListHandlerSrcSpan_Ifx0 ::
              View kon_ajmW phi_ajmV (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))) CodesModuleSrcSpan)
    pattern ListHandlerSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListHandlerSrcSpan_Ifx1 ::
              phi_ajmZ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajmZ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))
                 -> View kon_ajn0 phi_ajmZ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))) CodesModuleSrcSpan)
    pattern ListHandlerSrcSpan_Ifx1 p_ajmX p_ajmY = Tag (CS CZ)
                                                        (NA_I p_ajmX :* (NA_I p_ajmY :* Nil))
    pattern RaiseExprSrcSpanRaiseV3_ ::
              phi_ajn2 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))
              -> View kon_ajn3 phi_ajn2 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))) CodesModuleSrcSpan)
    pattern RaiseExprSrcSpanRaiseV3_ p_ajn1 = Tag CZ
                                                  (NA_I p_ajn1 :* Nil)
    pattern RaiseExprSrcSpanRaiseV2_ ::
              phi_ajn5 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajn6 phi_ajn5 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))) CodesModuleSrcSpan)
    pattern RaiseExprSrcSpanRaiseV2_ p_ajn4 = Tag (CS CZ)
                                                  (NA_I p_ajn4 :* Nil)
    pattern ListTup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 ::
              View kon_ajn8 phi_ajn7 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListTup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListTup1ExprSrcSpanMaybeExprSrcSpan_Ifx1 ::
              phi_ajnb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajnb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))
                 -> View kon_ajnc phi_ajnb (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListTup1ExprSrcSpanMaybeExprSrcSpan_Ifx1 p_ajn9 p_ajna = Tag (CS CZ)
                                                                         (NA_I p_ajn9 :* (NA_I p_ajna :* Nil))
    pattern ListIdentSrcSpan_Ifx0 ::
              View kon_ajne phi_ajnd (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListIdentSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListIdentSrcSpan_Ifx1 ::
              phi_ajnh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajnh ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))
                 -> View kon_ajni phi_ajnh (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListIdentSrcSpan_Ifx1 p_ajnf p_ajng = Tag (CS CZ)
                                                      (NA_I p_ajnf :* (NA_I p_ajng :* Nil))
    pattern MaybeTup1ExprSrcSpanMaybeExprSrcSpanNothing_ ::
              View kon_ajnk phi_ajnj (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeTup1ExprSrcSpanMaybeExprSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeTup1ExprSrcSpanMaybeExprSrcSpanJust_ ::
              phi_ajnm ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajnn phi_ajnm (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeTup1ExprSrcSpanMaybeExprSrcSpanJust_ p_ajnl = Tag (CS CZ)
                                                                   (NA_I p_ajnl :* Nil)
    pattern ImportItemSrcSpanImportItem_ ::
              phi_ajnr ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))
              -> phi_ajnr ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))
                 -> phi_ajnr ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajns phi_ajnr (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ImportItemSrcSpanImportItem_ p_ajno p_ajnp p_ajnq = Tag CZ
                                                                    (NA_I p_ajno :* (NA_I p_ajnp :* (NA_I p_ajnq :* Nil)))
    pattern DottedNameSrcSpan_Ifx0 ::
              View kon_ajnu phi_ajnt (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern DottedNameSrcSpan_Ifx0 = Tag CZ Nil
    pattern DottedNameSrcSpan_Ifx1 ::
              phi_ajnx ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajnx ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))
                 -> View kon_ajny phi_ajnx (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern DottedNameSrcSpan_Ifx1 p_ajnv p_ajnw = Tag (CS CZ)
                                                       (NA_I p_ajnv :* (NA_I p_ajnw :* Nil))
    pattern MaybeIdentSrcSpanNothing_ ::
              View kon_ajnA phi_ajnz (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeIdentSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeIdentSrcSpanJust_ ::
              phi_ajnC ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> View kon_ajnD phi_ajnC (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeIdentSrcSpanJust_ p_ajnB = Tag (CS CZ)
                                                (NA_I p_ajnB :* Nil)
    pattern MaybeDottedNameSrcSpanNothing_ ::
              View kon_ajnF phi_ajnE (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeDottedNameSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeDottedNameSrcSpanJust_ ::
              phi_ajnH ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))
              -> View kon_ajnI phi_ajnH (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeDottedNameSrcSpanJust_ p_ajnG = Tag (CS CZ)
                                                     (NA_I p_ajnG :* Nil)
    pattern ListFromItemSrcSpan_Ifx0 ::
              View kon_ajnK phi_ajnJ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListFromItemSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListFromItemSrcSpan_Ifx1 ::
              phi_ajnN ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))
              -> phi_ajnN ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))
                 -> View kon_ajnO phi_ajnN (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListFromItemSrcSpan_Ifx1 p_ajnL p_ajnM = Tag (CS CZ)
                                                         (NA_I p_ajnL :* (NA_I p_ajnM :* Nil))
    pattern FromItemSrcSpanFromItem_ ::
              phi_ajnS ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajnS ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))
                 -> phi_ajnS ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajnT phi_ajnS (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern FromItemSrcSpanFromItem_ p_ajnP p_ajnQ p_ajnR = Tag CZ
                                                                (NA_I p_ajnP :* (NA_I p_ajnQ :* (NA_I p_ajnR :* Nil)))
    pattern ListString_Ifx0 ::
              View kon_ajnV phi_ajnU (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListString_Ifx0 = Tag CZ Nil
    pattern ListString_Ifx1 ::
              kon_ajnZ  'KString
              -> phi_ajnY ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))
                 -> View kon_ajnZ phi_ajnY (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListString_Ifx1 p_ajnW p_ajnX = Tag (CS CZ)
                                                (NA_K p_ajnW :* (NA_I p_ajnX :* Nil))
    pattern ListSliceSrcSpan_Ifx0 ::
              View kon_ajo1 phi_ajo0 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListSliceSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListSliceSrcSpan_Ifx1 ::
              phi_ajo4 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))
              -> phi_ajo4 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))
                 -> View kon_ajo5 phi_ajo4 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListSliceSrcSpan_Ifx1 p_ajo2 p_ajo3 = Tag (CS CZ)
                                                      (NA_I p_ajo2 :* (NA_I p_ajo3 :* Nil))
    pattern OpSrcSpanAnd_ ::
              phi_ajo7 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajo8 phi_ajo7 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanAnd_ p_ajo6 = Tag CZ (NA_I p_ajo6 :* Nil)
    pattern OpSrcSpanOr_ ::
              phi_ajoa ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajob phi_ajoa (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanOr_ p_ajo9 = Tag (CS CZ) (NA_I p_ajo9 :* Nil)
    pattern OpSrcSpanNot_ ::
              phi_ajod ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoe phi_ajod (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanNot_ p_ajoc = Tag (CS (CS CZ))
                                       (NA_I p_ajoc :* Nil)
    pattern OpSrcSpanExponent_ ::
              phi_ajog ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoh phi_ajog (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanExponent_ p_ajof = Tag (CS (CS (CS CZ)))
                                            (NA_I p_ajof :* Nil)
    pattern OpSrcSpanLessThan_ ::
              phi_ajoj ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajok phi_ajoj (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanLessThan_ p_ajoi = Tag (CS (CS (CS (CS CZ))))
                                            (NA_I p_ajoi :* Nil)
    pattern OpSrcSpanGreaterThan_ ::
              phi_ajom ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajon phi_ajom (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanGreaterThan_ p_ajol = Tag (CS (CS (CS (CS (CS CZ)))))
                                               (NA_I p_ajol :* Nil)
    pattern OpSrcSpanEquality_ ::
              phi_ajop ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoq phi_ajop (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanEquality_ p_ajoo = Tag (CS (CS (CS (CS (CS (CS CZ))))))
                                            (NA_I p_ajoo :* Nil)
    pattern OpSrcSpanGreaterThanEquals_ ::
              phi_ajos ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajot phi_ajos (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanGreaterThanEquals_ p_ajor = Tag (CS (CS (CS (CS (CS (CS (CS CZ)))))))
                                                     (NA_I p_ajor :* Nil)
    pattern OpSrcSpanLessThanEquals_ ::
              phi_ajov ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajow phi_ajov (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanLessThanEquals_ p_ajou = Tag (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))
                                                  (NA_I p_ajou :* Nil)
    pattern OpSrcSpanNotEquals_ ::
              phi_ajoy ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoz phi_ajoy (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanNotEquals_ p_ajox = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))
                                             (NA_I p_ajox :* Nil)
    pattern OpSrcSpanNotEqualsV2_ ::
              phi_ajoB ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoC phi_ajoB (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanNotEqualsV2_ p_ajoA = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))
                                               (NA_I p_ajoA :* Nil)
    pattern OpSrcSpanIn_ ::
              phi_ajoE ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoF phi_ajoE (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanIn_ p_ajoD = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))
                                      (NA_I p_ajoD :* Nil)
    pattern OpSrcSpanIs_ ::
              phi_ajoH ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoI phi_ajoH (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanIs_ p_ajoG = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))
                                      (NA_I p_ajoG :* Nil)
    pattern OpSrcSpanIsNot_ ::
              phi_ajoK ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoL phi_ajoK (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanIsNot_ p_ajoJ = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))
                                         (NA_I p_ajoJ :* Nil)
    pattern OpSrcSpanNotIn_ ::
              phi_ajoN ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoO phi_ajoN (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanNotIn_ p_ajoM = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))
                                         (NA_I p_ajoM :* Nil)
    pattern OpSrcSpanBinaryOr_ ::
              phi_ajoQ ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoR phi_ajoQ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanBinaryOr_ p_ajoP = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))
                                            (NA_I p_ajoP :* Nil)
    pattern OpSrcSpanXor_ ::
              phi_ajoT ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoU phi_ajoT (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanXor_ p_ajoS = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))
                                       (NA_I p_ajoS :* Nil)
    pattern OpSrcSpanBinaryAnd_ ::
              phi_ajoW ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajoX phi_ajoW (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanBinaryAnd_ p_ajoV = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))
                                             (NA_I p_ajoV :* Nil)
    pattern OpSrcSpanShiftLeft_ ::
              phi_ajoZ ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajp0 phi_ajoZ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanShiftLeft_ p_ajoY = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))
                                             (NA_I p_ajoY :* Nil)
    pattern OpSrcSpanShiftRight_ ::
              phi_ajp2 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajp3 phi_ajp2 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanShiftRight_ p_ajp1 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))
                                              (NA_I p_ajp1 :* Nil)
    pattern OpSrcSpanMultiply_ ::
              phi_ajp5 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajp6 phi_ajp5 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanMultiply_ p_ajp4 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))
                                            (NA_I p_ajp4 :* Nil)
    pattern OpSrcSpanPlus_ ::
              phi_ajp8 ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajp9 phi_ajp8 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanPlus_ p_ajp7 = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))
                                        (NA_I p_ajp7 :* Nil)
    pattern OpSrcSpanMinus_ ::
              phi_ajpb ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpc phi_ajpb (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanMinus_ p_ajpa = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))
                                         (NA_I p_ajpa :* Nil)
    pattern OpSrcSpanDivide_ ::
              phi_ajpe ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpf phi_ajpe (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanDivide_ p_ajpd = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))
                                          (NA_I p_ajpd :* Nil)
    pattern OpSrcSpanFloorDivide_ ::
              phi_ajph ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpi phi_ajph (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanFloorDivide_ p_ajpg = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))
                                               (NA_I p_ajpg :* Nil)
    pattern OpSrcSpanMatrixMult_ ::
              phi_ajpk ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpl phi_ajpk (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanMatrixMult_ p_ajpj = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))
                                              (NA_I p_ajpj :* Nil)
    pattern OpSrcSpanInvert_ ::
              phi_ajpn ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpo phi_ajpn (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanInvert_ p_ajpm = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ))))))))))))))))))))))))))
                                          (NA_I p_ajpm :* Nil)
    pattern OpSrcSpanModulo_ ::
              phi_ajpq ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajpr phi_ajpq (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern OpSrcSpanModulo_ p_ajpp = Tag (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS (CS CZ)))))))))))))))))))))))))))
                                          (NA_I p_ajpp :* Nil)
    pattern MaybeYieldArgSrcSpanNothing_ ::
              View kon_ajpt phi_ajps (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeYieldArgSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeYieldArgSrcSpanJust_ ::
              phi_ajpv ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajpw phi_ajpv (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeYieldArgSrcSpanJust_ p_ajpu = Tag (CS CZ)
                                                   (NA_I p_ajpu :* Nil)
    pattern ComprehensionSrcSpanComprehension_ ::
              phi_ajpA ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))
              -> phi_ajpA ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))
                 -> phi_ajpA ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajpB phi_ajpA (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ComprehensionSrcSpanComprehension_ p_ajpx p_ajpy p_ajpz = Tag CZ
                                                                          (NA_I p_ajpx :* (NA_I p_ajpy :* (NA_I p_ajpz :* Nil)))
    pattern ListDictKeyDatumListSrcSpan_Ifx0 ::
              View kon_ajpD phi_ajpC (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListDictKeyDatumListSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListDictKeyDatumListSrcSpan_Ifx1 ::
              phi_ajpG ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajpG ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))
                 -> View kon_ajpH phi_ajpG (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListDictKeyDatumListSrcSpan_Ifx1 p_ajpE p_ajpF = Tag (CS CZ)
                                                                 (NA_I p_ajpE :* (NA_I p_ajpF :* Nil))
    pattern ArgumentSrcSpanArgExpr_ ::
              phi_ajpK ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajpK ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajpL phi_ajpK (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ArgumentSrcSpanArgExpr_ p_ajpI p_ajpJ = Tag CZ
                                                        (NA_I p_ajpI :* (NA_I p_ajpJ :* Nil))
    pattern ArgumentSrcSpanArgVarArgsPos_ ::
              phi_ajpO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajpO ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajpP phi_ajpO (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ArgumentSrcSpanArgVarArgsPos_ p_ajpM p_ajpN = Tag (CS CZ)
                                                              (NA_I p_ajpM :* (NA_I p_ajpN :* Nil))
    pattern ArgumentSrcSpanArgVarArgsKeyword_ ::
              phi_ajpS ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajpS ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajpT phi_ajpS (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ArgumentSrcSpanArgVarArgsKeyword_ p_ajpQ p_ajpR = Tag (CS (CS CZ))
                                                                  (NA_I p_ajpQ :* (NA_I p_ajpR :* Nil))
    pattern ArgumentSrcSpanArgKeyword_ ::
              phi_ajpX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajpX ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> phi_ajpX ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajpY phi_ajpX (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ArgumentSrcSpanArgKeyword_ p_ajpU p_ajpV p_ajpW = Tag (CS (CS (CS CZ)))
                                                                  (NA_I p_ajpU :* (NA_I p_ajpV :* (NA_I p_ajpW :* Nil)))
    pattern SliceSrcSpanSliceProper_ ::
              phi_ajq3 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
              -> phi_ajq3 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> phi_ajq3 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))
                    -> phi_ajq3 ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajq4 phi_ajq3 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern SliceSrcSpanSliceProper_ p_ajpZ p_ajq0 p_ajq1 p_ajq2 = Tag CZ
                                                                       (NA_I p_ajpZ :* (NA_I p_ajq0 :* (NA_I p_ajq1 :* (NA_I p_ajq2 :* Nil))))
    pattern SliceSrcSpanSliceExpr_ ::
              phi_ajq7 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajq7 ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajq8 phi_ajq7 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern SliceSrcSpanSliceExpr_ p_ajq5 p_ajq6 = Tag (CS CZ)
                                                       (NA_I p_ajq5 :* (NA_I p_ajq6 :* Nil))
    pattern SliceSrcSpanSliceEllipsis_ ::
              phi_ajqa ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajqb phi_ajqa (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern SliceSrcSpanSliceEllipsis_ p_ajq9 = Tag (CS (CS CZ))
                                                    (NA_I p_ajq9 :* Nil)
    pattern MaybeMaybeExprSrcSpanNothing_ ::
              View kon_ajqd phi_ajqc (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeMaybeExprSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeMaybeExprSrcSpanJust_ ::
              phi_ajqf ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
              -> View kon_ajqg phi_ajqf (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeMaybeExprSrcSpanJust_ p_ajqe = Tag (CS CZ)
                                                    (NA_I p_ajqe :* Nil)
    pattern ParameterSrcSpanParam_ ::
              phi_ajql ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajql ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> phi_ajql ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                    -> phi_ajql ( 'S ( 'S ( 'S ( 'S  'Z))))
                       -> View kon_ajqm phi_ajql (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParameterSrcSpanParam_ p_ajqh p_ajqi p_ajqj p_ajqk = Tag CZ
                                                                     (NA_I p_ajqh :* (NA_I p_ajqi :* (NA_I p_ajqj :* (NA_I p_ajqk :* Nil))))
    pattern ParameterSrcSpanVarArgsPos_ ::
              phi_ajqq ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajqq ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> phi_ajqq ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajqr phi_ajqq (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParameterSrcSpanVarArgsPos_ p_ajqn p_ajqo p_ajqp = Tag (CS CZ)
                                                                   (NA_I p_ajqn :* (NA_I p_ajqo :* (NA_I p_ajqp :* Nil)))
    pattern ParameterSrcSpanVarArgsKeyword_ ::
              phi_ajqv ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajqv ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> phi_ajqv ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajqw phi_ajqv (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParameterSrcSpanVarArgsKeyword_ p_ajqs p_ajqt p_ajqu = Tag (CS (CS CZ))
                                                                       (NA_I p_ajqs :* (NA_I p_ajqt :* (NA_I p_ajqu :* Nil)))
    pattern ParameterSrcSpanEndPositional_ ::
              phi_ajqy ( 'S ( 'S ( 'S ( 'S  'Z))))
              -> View kon_ajqz phi_ajqy (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParameterSrcSpanEndPositional_ p_ajqx = Tag (CS (CS (CS CZ)))
                                                        (NA_I p_ajqx :* Nil)
    pattern ParameterSrcSpanUnPackTuple_ ::
              phi_ajqD ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))
              -> phi_ajqD ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> phi_ajqD ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajqE phi_ajqD (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParameterSrcSpanUnPackTuple_ p_ajqA p_ajqB p_ajqC = Tag (CS (CS (CS (CS CZ))))
                                                                    (NA_I p_ajqA :* (NA_I p_ajqB :* (NA_I p_ajqC :* Nil)))
    pattern ParamTupleSrcSpanParamTupleName_ ::
              phi_ajqH ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))
              -> phi_ajqH ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajqI phi_ajqH (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParamTupleSrcSpanParamTupleName_ p_ajqF p_ajqG = Tag CZ
                                                                 (NA_I p_ajqF :* (NA_I p_ajqG :* Nil))
    pattern ParamTupleSrcSpanParamTuple_ ::
              phi_ajqL ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))
              -> phi_ajqL ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajqM phi_ajqL (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ParamTupleSrcSpanParamTuple_ p_ajqJ p_ajqK = Tag (CS CZ)
                                                             (NA_I p_ajqJ :* (NA_I p_ajqK :* Nil))
    pattern ListParamTupleSrcSpan_Ifx0 ::
              View kon_ajqO phi_ajqN (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListParamTupleSrcSpan_Ifx0 = Tag CZ Nil
    pattern ListParamTupleSrcSpan_Ifx1 ::
              phi_ajqR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))
              -> phi_ajqR ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))
                 -> View kon_ajqS phi_ajqR (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ListParamTupleSrcSpan_Ifx1 p_ajqP p_ajqQ = Tag (CS CZ)
                                                           (NA_I p_ajqP :* (NA_I p_ajqQ :* Nil))
    pattern YieldArgSrcSpanYieldFrom_ ::
              phi_ajqV ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajqV ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajqW phi_ajqV (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern YieldArgSrcSpanYieldFrom_ p_ajqT p_ajqU = Tag CZ
                                                          (NA_I p_ajqT :* (NA_I p_ajqU :* Nil))
    pattern YieldArgSrcSpanYieldExpr_ ::
              phi_ajqY ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> View kon_ajqZ phi_ajqY (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern YieldArgSrcSpanYieldExpr_ p_ajqX = Tag (CS CZ)
                                                   (NA_I p_ajqX :* Nil)
    pattern ComprehensionExprSrcSpanComprehensionExpr_ ::
              phi_ajr1 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> View kon_ajr2 phi_ajr1 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ComprehensionExprSrcSpanComprehensionExpr_ p_ajr0 = Tag CZ
                                                                    (NA_I p_ajr0 :* Nil)
    pattern ComprehensionExprSrcSpanComprehensionDict_ ::
              phi_ajr4 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajr5 phi_ajr4 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ComprehensionExprSrcSpanComprehensionDict_ p_ajr3 = Tag (CS CZ)
                                                                    (NA_I p_ajr3 :* Nil)
    pattern CompForSrcSpanCompFor_ ::
              kon_ajrc  'KBool
              -> phi_ajrb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))
                 -> phi_ajrb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                    -> phi_ajrb ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))
                       -> phi_ajrb ( 'S ( 'S ( 'S ( 'S  'Z))))
                          -> View kon_ajrc phi_ajrb (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern CompForSrcSpanCompFor_ p_ajr6 p_ajr7 p_ajr8 p_ajr9 p_ajra = Tag CZ
                                                                            (NA_K p_ajr6 :* (NA_I p_ajr7 :* (NA_I p_ajr8 :* (NA_I p_ajr9 :* (NA_I p_ajra :* Nil)))))
    pattern DictKeyDatumListSrcSpanDictMappingPair_ ::
              phi_ajrf ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajrf ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
                 -> View kon_ajrg phi_ajrf (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern DictKeyDatumListSrcSpanDictMappingPair_ p_ajrd p_ajre = Tag CZ
                                                                        (NA_I p_ajrd :* (NA_I p_ajre :* Nil))
    pattern DictKeyDatumListSrcSpanDictUnpacking_ ::
              phi_ajri ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> View kon_ajrj phi_ajri (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern DictKeyDatumListSrcSpanDictUnpacking_ p_ajrh = Tag (CS CZ)
                                                               (NA_I p_ajrh :* Nil)
    pattern MaybeCompIterSrcSpanNothing_ ::
              View kon_ajrl phi_ajrk (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeCompIterSrcSpanNothing_ = Tag CZ Nil
    pattern MaybeCompIterSrcSpanJust_ ::
              phi_ajrn ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajro phi_ajrn (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeCompIterSrcSpanJust_ p_ajrm = Tag (CS CZ)
                                                   (NA_I p_ajrm :* Nil)
    pattern CompIterSrcSpanIterFor_ ::
              phi_ajrr ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajrr ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajrs phi_ajrr (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern CompIterSrcSpanIterFor_ p_ajrp p_ajrq = Tag CZ
                                                        (NA_I p_ajrp :* (NA_I p_ajrq :* Nil))
    pattern CompIterSrcSpanIterIf_ ::
              phi_ajrv ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajrv ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajrw phi_ajrv (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern CompIterSrcSpanIterIf_ p_ajrt p_ajru = Tag (CS CZ)
                                                       (NA_I p_ajrt :* (NA_I p_ajru :* Nil))
    pattern CompIfSrcSpanCompIf_ ::
              phi_ajrA ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajrA ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))
                 -> phi_ajrA ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajrB phi_ajrA (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern CompIfSrcSpanCompIf_ p_ajrx p_ajry p_ajrz = Tag CZ
                                                            (NA_I p_ajrx :* (NA_I p_ajry :* (NA_I p_ajrz :* Nil)))
    pattern Tup1ExprSrcSpanSuiteSrcSpan_Ifx0 ::
              phi_ajrE ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajrE ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> View kon_ajrF phi_ajrE (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern Tup1ExprSrcSpanSuiteSrcSpan_Ifx0 p_ajrC p_ajrD = Tag CZ
                                                                 (NA_I p_ajrC :* (NA_I p_ajrD :* Nil))
    pattern DecoratorSrcSpanDecorator_ ::
              phi_ajrJ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))
              -> phi_ajrJ ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))
                 -> phi_ajrJ ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajrK phi_ajrJ (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern DecoratorSrcSpanDecorator_ p_ajrG p_ajrH p_ajrI = Tag CZ
                                                                  (NA_I p_ajrG :* (NA_I p_ajrH :* (NA_I p_ajrI :* Nil)))
    pattern HandlerSrcSpanHandler_ ::
              phi_ajrO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))
              -> phi_ajrO ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))
                 -> phi_ajrO ( 'S ( 'S ( 'S ( 'S  'Z))))
                    -> View kon_ajrP phi_ajrO (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern HandlerSrcSpanHandler_ p_ajrL p_ajrM p_ajrN = Tag CZ
                                                              (NA_I p_ajrL :* (NA_I p_ajrM :* (NA_I p_ajrN :* Nil)))
    pattern ExceptClauseSrcSpanExceptClause_ ::
              phi_ajrS ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))
              -> phi_ajrS ( 'S ( 'S ( 'S ( 'S  'Z))))
                 -> View kon_ajrT phi_ajrS (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern ExceptClauseSrcSpanExceptClause_ p_ajrQ p_ajrR = Tag CZ
                                                                 (NA_I p_ajrQ :* (NA_I p_ajrR :* Nil))
    pattern Tup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 ::
              phi_ajrW ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajrW ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))
                 -> View kon_ajrX phi_ajrW (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern Tup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 p_ajrU p_ajrV = Tag CZ
                                                                     (NA_I p_ajrU :* (NA_I p_ajrV :* Nil))
    pattern MaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpanNothing_ ::
              View kon_ajrZ phi_ajrY (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpanNothing_ = Tag CZ
                                                                                   Nil
    pattern MaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpanJust_ ::
              phi_ajs1 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))))
              -> View kon_ajs2 phi_ajs1 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern MaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpanJust_ p_ajs0 = Tag (CS CZ)
                                                                                       (NA_I p_ajs0 :* Nil)
    pattern Tup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 ::
              phi_ajs5 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))
              -> phi_ajs5 ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z)))))))))))))))))))))
                 -> View kon_ajs6 phi_ajs5 (Lkup ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S ( 'S  'Z))))))))))))))))))))))))))))))))))))))))))))))))))))) CodesModuleSrcSpan)
    pattern Tup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan_Ifx0 p_ajs3 p_ajs4 = Tag CZ
                                                                                         (NA_I p_ajs3 :* (NA_I p_ajs4 :* Nil))
    instance Family Singl FamModuleSrcSpan CodesModuleSrcSpan where
      sfrom'
        = \case
            IdxModuleSrcSpan
              -> \case
                   El (Module x_ajs7)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajs7) :* Nil))
            IdxListStatementSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajs8 x_ajs9)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajs8) :* (NA_I (El x_ajs9) :* Nil))))
            IdxStatementSrcSpan
              -> \case
                   El (Import x_ajsa x_ajsb)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajsa) :* (NA_I (El x_ajsb) :* Nil)))
                   El (FromImport x_ajsc x_ajsd x_ajse)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajsc)
                                   :* (NA_I (El x_ajsd) :* (NA_I (El x_ajse) :* Nil)))))
                   El (While x_ajsf x_ajsg x_ajsh x_ajsi)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                   (NA_I (El x_ajsf)
                                      :*
                                        (NA_I (El x_ajsg)
                                           :* (NA_I (El x_ajsh) :* (NA_I (El x_ajsi) :* Nil)))))))
                   El (For x_ajsj x_ajsk x_ajsl x_ajsm x_ajsn)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                      (NA_I (El x_ajsj)
                                         :*
                                           (NA_I (El x_ajsk)
                                              :*
                                                (NA_I (El x_ajsl)
                                                   :*
                                                     (NA_I (El x_ajsm)
                                                        :* (NA_I (El x_ajsn) :* Nil)))))))))
                   El (AsyncFor x_ajso x_ajsp)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                         (NA_I (El x_ajso) :* (NA_I (El x_ajsp) :* Nil)))))))
                   El (Fun x_ajsq x_ajsr x_ajss x_ajst x_ajsu)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                            (NA_I (El x_ajsq)
                                               :*
                                                 (NA_I (El x_ajsr)
                                                    :*
                                                      (NA_I (El x_ajss)
                                                         :*
                                                           (NA_I (El x_ajst)
                                                              :* (NA_I (El x_ajsu) :* Nil)))))))))))
                   El (AsyncFun x_ajsv x_ajsw)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                               (NA_I (El x_ajsv)
                                                  :* (NA_I (El x_ajsw) :* Nil)))))))))
                   El (Class x_ajsx x_ajsy x_ajsz x_ajsA)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                  (NA_I (El x_ajsx)
                                                     :*
                                                       (NA_I (El x_ajsy)
                                                          :*
                                                            (NA_I (El x_ajsz)
                                                               :*
                                                                 (NA_I (El x_ajsA)
                                                                    :* Nil))))))))))))
                   El (Conditional x_ajsB x_ajsC x_ajsD)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                     (NA_I (El x_ajsB)
                                                        :*
                                                          (NA_I (El x_ajsC)
                                                             :* (NA_I (El x_ajsD) :* Nil))))))))))))
                   El (Assign x_ajsE x_ajsF x_ajsG)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                        (NA_I (El x_ajsE)
                                                           :*
                                                             (NA_I (El x_ajsF)
                                                                :*
                                                                  (NA_I (El x_ajsG)
                                                                     :* Nil)))))))))))))
                   El (AugmentedAssign x_ajsH x_ajsI x_ajsJ x_ajsK)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                           (NA_I (El x_ajsH)
                                                              :*
                                                                (NA_I (El x_ajsI)
                                                                   :*
                                                                     (NA_I (El x_ajsJ)
                                                                        :*
                                                                          (NA_I (El x_ajsK)
                                                                             :* Nil)))))))))))))))
                   El (AnnotatedAssign x_ajsL x_ajsM x_ajsN x_ajsO)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                              (NA_I (El x_ajsL)
                                                                 :*
                                                                   (NA_I (El x_ajsM)
                                                                      :*
                                                                        (NA_I (El x_ajsN)
                                                                           :*
                                                                             (NA_I (El x_ajsO)
                                                                                :*
                                                                                  Nil))))))))))))))))
                   El (Decorated x_ajsP x_ajsQ x_ajsR)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                 (NA_I (El x_ajsP)
                                                                    :*
                                                                      (NA_I (El x_ajsQ)
                                                                         :*
                                                                           (NA_I (El x_ajsR)
                                                                              :* Nil))))))))))))))))
                   El (Return x_ajsS x_ajsT)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                    (NA_I (El x_ajsS)
                                                                       :*
                                                                         (NA_I (El x_ajsT)
                                                                            :* Nil))))))))))))))))
                   El (Try x_ajsU x_ajsV x_ajsW x_ajsX x_ajsY)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                       (NA_I (El x_ajsU)
                                                                          :*
                                                                            (NA_I (El x_ajsV)
                                                                               :*
                                                                                 (NA_I (El x_ajsW)
                                                                                    :*
                                                                                      (NA_I
                                                                                         (El x_ajsX)
                                                                                         :*
                                                                                           (NA_I
                                                                                              (El
                                                                                                 x_ajsY)
                                                                                              :*
                                                                                                Nil))))))))))))))))))))
                   El (Raise x_ajsZ x_ajt0)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                          (NA_I (El x_ajsZ)
                                                                             :*
                                                                               (NA_I (El x_ajt0)
                                                                                  :*
                                                                                    Nil))))))))))))))))))
                   El (With x_ajt1 x_ajt2 x_ajt3)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                             (NA_I (El x_ajt1)
                                                                                :*
                                                                                  (NA_I (El x_ajt2)
                                                                                     :*
                                                                                       (NA_I
                                                                                          (El
                                                                                             x_ajt3)
                                                                                          :*
                                                                                            Nil))))))))))))))))))))
                   El (AsyncWith x_ajt4 x_ajt5)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                (NA_I (El x_ajt4)
                                                                                   :*
                                                                                     (NA_I
                                                                                        (El x_ajt5)
                                                                                        :*
                                                                                          Nil))))))))))))))))))))
                   El (Pass x_ajt6)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                   (NA_I (El x_ajt6)
                                                                                      :*
                                                                                        Nil))))))))))))))))))))
                   El (Break x_ajt7)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                      (NA_I
                                                                                         (El x_ajt7)
                                                                                         :*
                                                                                           Nil)))))))))))))))))))))
                   El (Continue x_ajt8)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                         (NA_I
                                                                                            (El
                                                                                               x_ajt8)
                                                                                            :*
                                                                                              Nil))))))))))))))))))))))
                   El (Delete x_ajt9 x_ajta)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                            (NA_I
                                                                                               (El
                                                                                                  x_ajt9)
                                                                                               :*
                                                                                                 (NA_I
                                                                                                    (El
                                                                                                       x_ajta)
                                                                                                    :*
                                                                                                      Nil))))))))))))))))))))))))
                   El (StmtExpr x_ajtb x_ajtc)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                               (NA_I
                                                                                                  (El
                                                                                                     x_ajtb)
                                                                                                  :*
                                                                                                    (NA_I
                                                                                                       (El
                                                                                                          x_ajtc)
                                                                                                       :*
                                                                                                         Nil)))))))))))))))))))))))))
                   El (Global x_ajtd x_ajte)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                  (NA_I
                                                                                                     (El
                                                                                                        x_ajtd)
                                                                                                     :*
                                                                                                       (NA_I
                                                                                                          (El
                                                                                                             x_ajte)
                                                                                                          :*
                                                                                                            Nil))))))))))))))))))))))))))
                   El (NonLocal x_ajtf x_ajtg)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                     (NA_I
                                                                                                        (El
                                                                                                           x_ajtf)
                                                                                                        :*
                                                                                                          (NA_I
                                                                                                             (El
                                                                                                                x_ajtg)
                                                                                                             :*
                                                                                                               Nil)))))))))))))))))))))))))))
                   El (Assert x_ajth x_ajti)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                        (NA_I
                                                                                                           (El
                                                                                                              x_ajth)
                                                                                                           :*
                                                                                                             (NA_I
                                                                                                                (El
                                                                                                                   x_ajti)
                                                                                                                :*
                                                                                                                  Nil))))))))))))))))))))))))))))
                   El (Print x_ajtj x_ajtk x_ajtl x_ajtm)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                           (NA_K
                                                                                                              (SBool
                                                                                                                 x_ajtj)
                                                                                                              :*
                                                                                                                (NA_I
                                                                                                                   (El
                                                                                                                      x_ajtk)
                                                                                                                   :*
                                                                                                                     (NA_K
                                                                                                                        (SBool
                                                                                                                           x_ajtl)
                                                                                                                        :*
                                                                                                                          (NA_I
                                                                                                                             (El
                                                                                                                                x_ajtm)
                                                                                                                             :*
                                                                                                                               Nil)))))))))))))))))))))))))))))))
                   El (Exec x_ajtn x_ajto x_ajtp)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                              (NA_I
                                                                                                                 (El
                                                                                                                    x_ajtn)
                                                                                                                 :*
                                                                                                                   (NA_I
                                                                                                                      (El
                                                                                                                         x_ajto)
                                                                                                                      :*
                                                                                                                        (NA_I
                                                                                                                           (El
                                                                                                                              x_ajtp)
                                                                                                                           :*
                                                                                                                             Nil)))))))))))))))))))))))))))))))
            IdxListImportItemSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajtq x_ajtr)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajtq) :* (NA_I (El x_ajtr) :* Nil))))
            IdxSrcSpan
              -> \case
                   El (SpanCoLinear x_ajts x_ajtt x_ajtu x_ajtv)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_K (SString x_ajts)
                                :*
                                  (NA_K (SInt x_ajtt)
                                     :* (NA_K (SInt x_ajtu) :* (NA_K (SInt x_ajtv) :* Nil)))))
                   El (SpanMultiLine x_ajtw x_ajtx x_ajty x_ajtz x_ajtA)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_K (SString x_ajtw)
                                   :*
                                     (NA_K (SInt x_ajtx)
                                        :*
                                          (NA_K (SInt x_ajty)
                                             :*
                                               (NA_K (SInt x_ajtz)
                                                  :* (NA_K (SInt x_ajtA) :* Nil)))))))
                   El (SpanPoint x_ajtB x_ajtC x_ajtD)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                   (NA_K (SString x_ajtB)
                                      :* (NA_K (SInt x_ajtC) :* (NA_K (SInt x_ajtD) :* Nil))))))
                   El SpanEmpty
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z Nil))))
            IdxImportRelativeSrcSpan
              -> \case
                   El (ImportRelative x_ajtE x_ajtF x_ajtG)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_K (SInt x_ajtE)
                                :* (NA_I (El x_ajtF) :* (NA_I (El x_ajtG) :* Nil))))
            IdxFromItemsSrcSpan
              -> \case
                   El (ImportEverything x_ajtH)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajtH) :* Nil))
                   El (FromItems x_ajtI x_ajtJ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajtI) :* (NA_I (El x_ajtJ) :* Nil))))
            IdxExprSrcSpan
              -> \case
                   El (Var x_ajtK x_ajtL)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajtK) :* (NA_I (El x_ajtL) :* Nil)))
                   El (Int x_ajtM x_ajtN x_ajtO)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_K (SInteger x_ajtM)
                                   :* (NA_K (SString x_ajtN) :* (NA_I (El x_ajtO) :* Nil)))))
                   El (LongInt x_ajtP x_ajtQ x_ajtR)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                   (NA_K (SInteger x_ajtP)
                                      :* (NA_K (SString x_ajtQ) :* (NA_I (El x_ajtR) :* Nil))))))
                   El (Float x_ajtS x_ajtT x_ajtU)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                      (NA_K (SDouble x_ajtS)
                                         :*
                                           (NA_K (SString x_ajtT) :* (NA_I (El x_ajtU) :* Nil)))))))
                   El (Imaginary x_ajtV x_ajtW x_ajtX)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                         (NA_K (SDouble x_ajtV)
                                            :*
                                              (NA_K (SString x_ajtW)
                                                 :* (NA_I (El x_ajtX) :* Nil))))))))
                   El (Bool x_ajtY x_ajtZ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                            (NA_K (SBool x_ajtY) :* (NA_I (El x_ajtZ) :* Nil))))))))
                   El (None x_aju0)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                               (NA_I (El x_aju0) :* Nil))))))))
                   El (Ellipsis x_aju1)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                  (NA_I (El x_aju1) :* Nil)))))))))
                   El (ByteStrings x_aju2 x_aju3)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                     (NA_I (El x_aju2)
                                                        :* (NA_I (El x_aju3) :* Nil)))))))))))
                   El (Strings x_aju4 x_aju5)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                        (NA_I (El x_aju4)
                                                           :* (NA_I (El x_aju5) :* Nil))))))))))))
                   El (UnicodeStrings x_aju6 x_aju7)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                           (NA_I (El x_aju6)
                                                              :*
                                                                (NA_I (El x_aju7)
                                                                   :* Nil)))))))))))))
                   El (Call x_aju8 x_aju9 x_ajua)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                              (NA_I (El x_aju8)
                                                                 :*
                                                                   (NA_I (El x_aju9)
                                                                      :*
                                                                        (NA_I (El x_ajua)
                                                                           :* Nil)))))))))))))))
                   El (Subscript x_ajub x_ajuc x_ajud)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                 (NA_I (El x_ajub)
                                                                    :*
                                                                      (NA_I (El x_ajuc)
                                                                         :*
                                                                           (NA_I (El x_ajud)
                                                                              :* Nil))))))))))))))))
                   El (SlicedExpr x_ajue x_ajuf x_ajug)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                    (NA_I (El x_ajue)
                                                                       :*
                                                                         (NA_I (El x_ajuf)
                                                                            :*
                                                                              (NA_I (El x_ajug)
                                                                                 :*
                                                                                   Nil)))))))))))))))))
                   El (CondExpr x_ajuh x_ajui x_ajuj x_ajuk)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                       (NA_I (El x_ajuh)
                                                                          :*
                                                                            (NA_I (El x_ajui)
                                                                               :*
                                                                                 (NA_I (El x_ajuj)
                                                                                    :*
                                                                                      (NA_I
                                                                                         (El x_ajuk)
                                                                                         :*
                                                                                           Nil)))))))))))))))))))
                   El (BinaryOp x_ajul x_ajum x_ajun x_ajuo)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                          (NA_I (El x_ajul)
                                                                             :*
                                                                               (NA_I (El x_ajum)
                                                                                  :*
                                                                                    (NA_I
                                                                                       (El x_ajun)
                                                                                       :*
                                                                                         (NA_I
                                                                                            (El
                                                                                               x_ajuo)
                                                                                            :*
                                                                                              Nil))))))))))))))))))))
                   El (UnaryOp x_ajup x_ajuq x_ajur)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                             (NA_I (El x_ajup)
                                                                                :*
                                                                                  (NA_I (El x_ajuq)
                                                                                     :*
                                                                                       (NA_I
                                                                                          (El
                                                                                             x_ajur)
                                                                                          :*
                                                                                            Nil))))))))))))))))))))
                   El (Dot x_ajus x_ajut x_ajuu)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                (NA_I (El x_ajus)
                                                                                   :*
                                                                                     (NA_I
                                                                                        (El x_ajut)
                                                                                        :*
                                                                                          (NA_I
                                                                                             (El
                                                                                                x_ajuu)
                                                                                             :*
                                                                                               Nil)))))))))))))))))))))
                   El (Lambda x_ajuv x_ajuw x_ajux)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                   (NA_I (El x_ajuv)
                                                                                      :*
                                                                                        (NA_I
                                                                                           (El
                                                                                              x_ajuw)
                                                                                           :*
                                                                                             (NA_I
                                                                                                (El
                                                                                                   x_ajux)
                                                                                                :*
                                                                                                  Nil))))))))))))))))))))))
                   El (Tuple x_ajuy x_ajuz)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                      (NA_I
                                                                                         (El x_ajuy)
                                                                                         :*
                                                                                           (NA_I
                                                                                              (El
                                                                                                 x_ajuz)
                                                                                              :*
                                                                                                Nil))))))))))))))))))))))
                   El (Yield x_ajuA x_ajuB)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                         (NA_I
                                                                                            (El
                                                                                               x_ajuA)
                                                                                            :*
                                                                                              (NA_I
                                                                                                 (El
                                                                                                    x_ajuB)
                                                                                                 :*
                                                                                                   Nil)))))))))))))))))))))))
                   El (Generator x_ajuC x_ajuD)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                            (NA_I
                                                                                               (El
                                                                                                  x_ajuC)
                                                                                               :*
                                                                                                 (NA_I
                                                                                                    (El
                                                                                                       x_ajuD)
                                                                                                    :*
                                                                                                      Nil))))))))))))))))))))))))
                   El (Await x_ajuE x_ajuF)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                               (NA_I
                                                                                                  (El
                                                                                                     x_ajuE)
                                                                                                  :*
                                                                                                    (NA_I
                                                                                                       (El
                                                                                                          x_ajuF)
                                                                                                       :*
                                                                                                         Nil)))))))))))))))))))))))))
                   El (ListComp x_ajuG x_ajuH)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                  (NA_I
                                                                                                     (El
                                                                                                        x_ajuG)
                                                                                                     :*
                                                                                                       (NA_I
                                                                                                          (El
                                                                                                             x_ajuH)
                                                                                                          :*
                                                                                                            Nil))))))))))))))))))))))))))
                   El (List x_ajuI x_ajuJ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                     (NA_I
                                                                                                        (El
                                                                                                           x_ajuI)
                                                                                                        :*
                                                                                                          (NA_I
                                                                                                             (El
                                                                                                                x_ajuJ)
                                                                                                             :*
                                                                                                               Nil)))))))))))))))))))))))))))
                   El (Dictionary x_ajuK x_ajuL)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                        (NA_I
                                                                                                           (El
                                                                                                              x_ajuK)
                                                                                                           :*
                                                                                                             (NA_I
                                                                                                                (El
                                                                                                                   x_ajuL)
                                                                                                                :*
                                                                                                                  Nil))))))))))))))))))))))))))))
                   El (DictComp x_ajuM x_ajuN)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                           (NA_I
                                                                                                              (El
                                                                                                                 x_ajuM)
                                                                                                              :*
                                                                                                                (NA_I
                                                                                                                   (El
                                                                                                                      x_ajuN)
                                                                                                                   :*
                                                                                                                     Nil)))))))))))))))))))))))))))))
                   El (Set x_ajuO x_ajuP)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                              (NA_I
                                                                                                                 (El
                                                                                                                    x_ajuO)
                                                                                                                 :*
                                                                                                                   (NA_I
                                                                                                                      (El
                                                                                                                         x_ajuP)
                                                                                                                      :*
                                                                                                                        Nil))))))))))))))))))))))))))))))
                   El (SetComp x_ajuQ x_ajuR)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                              (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                                 (NA_I
                                                                                                                    (El
                                                                                                                       x_ajuQ)
                                                                                                                    :*
                                                                                                                      (NA_I
                                                                                                                         (El
                                                                                                                            x_ajuR)
                                                                                                                         :*
                                                                                                                           Nil)))))))))))))))))))))))))))))))
                   El (Starred x_ajuS x_ajuT)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                 (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                                    (NA_I
                                                                                                                       (El
                                                                                                                          x_ajuS)
                                                                                                                       :*
                                                                                                                         (NA_I
                                                                                                                            (El
                                                                                                                               x_ajuT)
                                                                                                                            :*
                                                                                                                              Nil))))))))))))))))))))))))))))))))
                   El (Paren x_ajuU x_ajuV)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                    (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                                       (NA_I
                                                                                                                          (El
                                                                                                                             x_ajuU)
                                                                                                                          :*
                                                                                                                            (NA_I
                                                                                                                               (El
                                                                                                                                  x_ajuV)
                                                                                                                               :*
                                                                                                                                 Nil)))))))))))))))))))))))))))))))))
                   El (StringConversion x_ajuW x_ajuX)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                                       (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                                          (NA_I
                                                                                                                             (El
                                                                                                                                x_ajuW)
                                                                                                                             :*
                                                                                                                               (NA_I
                                                                                                                                  (El
                                                                                                                                     x_ajuX)
                                                                                                                                  :*
                                                                                                                                    Nil))))))))))))))))))))))))))))))))))
            IdxSuiteSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajuY x_ajuZ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajuY) :* (NA_I (El x_ajuZ) :* Nil))))
            IdxListExprSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajv0 x_ajv1)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajv0) :* (NA_I (El x_ajv1) :* Nil))))
            IdxIdentSrcSpan
              -> \case
                   El (Ident x_ajv2 x_ajv3)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_K (SString x_ajv2) :* (NA_I (El x_ajv3) :* Nil)))
            IdxListParameterSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajv4 x_ajv5)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajv4) :* (NA_I (El x_ajv5) :* Nil))))
            IdxMaybeExprSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajv6)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajv6) :* Nil)))
            IdxListArgumentSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajv7 x_ajv8)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajv7) :* (NA_I (El x_ajv8) :* Nil))))
            IdxListTup1ExprSrcSpanSuiteSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajv9 x_ajva)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajv9) :* (NA_I (El x_ajva) :* Nil))))
            IdxAssignOpSrcSpan
              -> \case
                   El (PlusAssign x_ajvb)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvb) :* Nil))
                   El (MinusAssign x_ajvc)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvc) :* Nil)))
                   El (MultAssign x_ajvd)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvd) :* Nil))))
                   El (DivAssign x_ajve)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajve) :* Nil)))))
                   El (ModAssign x_ajvf)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvf) :* Nil))))))
                   El (PowAssign x_ajvg)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                            (NA_I (El x_ajvg) :* Nil)))))))
                   El (BinAndAssign x_ajvh)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                               (NA_I (El x_ajvh) :* Nil))))))))
                   El (BinOrAssign x_ajvi)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                  (NA_I (El x_ajvi) :* Nil)))))))))
                   El (BinXorAssign x_ajvj)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                     (NA_I (El x_ajvj) :* Nil))))))))))
                   El (LeftShiftAssign x_ajvk)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                        (NA_I (El x_ajvk) :* Nil)))))))))))
                   El (RightShiftAssign x_ajvl)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                           (NA_I (El x_ajvl) :* Nil))))))))))))
                   El (FloorDivAssign x_ajvm)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                              (NA_I (El x_ajvm) :* Nil)))))))))))))
                   El (MatrixMultAssign x_ajvn)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                 (NA_I (El x_ajvn)
                                                                    :* Nil))))))))))))))
            IdxListDecoratorSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvo x_ajvp)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvo) :* (NA_I (El x_ajvp) :* Nil))))
            IdxListHandlerSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvq x_ajvr)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvq) :* (NA_I (El x_ajvr) :* Nil))))
            IdxRaiseExprSrcSpan
              -> \case
                   El (RaiseV3 x_ajvs)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvs) :* Nil))
                   El (RaiseV2 x_ajvt)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvt) :* Nil)))
            IdxListTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvu x_ajvv)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvu) :* (NA_I (El x_ajvv) :* Nil))))
            IdxListIdentSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvw x_ajvx)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvw) :* (NA_I (El x_ajvx) :* Nil))))
            IdxMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajvy)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvy) :* Nil)))
            IdxImportItemSrcSpan
              -> \case
                   El (ImportItem x_ajvz x_ajvA x_ajvB)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajvz)
                                :* (NA_I (El x_ajvA) :* (NA_I (El x_ajvB) :* Nil))))
            IdxDottedNameSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvC x_ajvD)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvC) :* (NA_I (El x_ajvD) :* Nil))))
            IdxMaybeIdentSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajvE)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvE) :* Nil)))
            IdxMaybeDottedNameSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajvF)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvF) :* Nil)))
            IdxListFromItemSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvG x_ajvH)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvG) :* (NA_I (El x_ajvH) :* Nil))))
            IdxFromItemSrcSpan
              -> \case
                   El (FromItem x_ajvI x_ajvJ x_ajvK)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajvI)
                                :* (NA_I (El x_ajvJ) :* (NA_I (El x_ajvK) :* Nil))))
            IdxListString
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvL x_ajvM)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_K (SString x_ajvL) :* (NA_I (El x_ajvM) :* Nil))))
            IdxListSliceSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajvN x_ajvO)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajvN) :* (NA_I (El x_ajvO) :* Nil))))
            IdxOpSrcSpan
              -> \case
                   El (And x_ajvP)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvP) :* Nil))
                   El (Or x_ajvQ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvQ) :* Nil)))
                   El (Not x_ajvR)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvR) :* Nil))))
                   El (Exponent x_ajvS)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvS) :* Nil)))))
                   El (LessThan x_ajvT)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajvT) :* Nil))))))
                   El (GreaterThan x_ajvU)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                            (NA_I (El x_ajvU) :* Nil)))))))
                   El (Equality x_ajvV)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                               (NA_I (El x_ajvV) :* Nil))))))))
                   El (GreaterThanEquals x_ajvW)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                  (NA_I (El x_ajvW) :* Nil)))))))))
                   El (LessThanEquals x_ajvX)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                     (NA_I (El x_ajvX) :* Nil))))))))))
                   El (NotEquals x_ajvY)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                        (NA_I (El x_ajvY) :* Nil)))))))))))
                   El (NotEqualsV2 x_ajvZ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                           (NA_I (El x_ajvZ) :* Nil))))))))))))
                   El (In x_ajw0)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                              (NA_I (El x_ajw0) :* Nil)))))))))))))
                   El (Is x_ajw1)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                 (NA_I (El x_ajw1)
                                                                    :* Nil))))))))))))))
                   El (IsNot x_ajw2)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                    (NA_I (El x_ajw2)
                                                                       :* Nil)))))))))))))))
                   El (NotIn x_ajw3)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                       (NA_I (El x_ajw3)
                                                                          :* Nil))))))))))))))))
                   El (BinaryOr x_ajw4)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                          (NA_I (El x_ajw4)
                                                                             :* Nil)))))))))))))))))
                   El (Xor x_ajw5)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                             (NA_I (El x_ajw5)
                                                                                :*
                                                                                  Nil))))))))))))))))))
                   El (BinaryAnd x_ajw6)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                (NA_I (El x_ajw6)
                                                                                   :*
                                                                                     Nil)))))))))))))))))))
                   El (ShiftLeft x_ajw7)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                   (NA_I (El x_ajw7)
                                                                                      :*
                                                                                        Nil))))))))))))))))))))
                   El (ShiftRight x_ajw8)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                      (NA_I
                                                                                         (El x_ajw8)
                                                                                         :*
                                                                                           Nil)))))))))))))))))))))
                   El (Multiply x_ajw9)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                         (NA_I
                                                                                            (El
                                                                                               x_ajw9)
                                                                                            :*
                                                                                              Nil))))))))))))))))))))))
                   El (Plus x_ajwa)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                            (NA_I
                                                                                               (El
                                                                                                  x_ajwa)
                                                                                               :*
                                                                                                 Nil)))))))))))))))))))))))
                   El (Minus x_ajwb)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                               (NA_I
                                                                                                  (El
                                                                                                     x_ajwb)
                                                                                                  :*
                                                                                                    Nil))))))))))))))))))))))))
                   El (Divide x_ajwc)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                  (NA_I
                                                                                                     (El
                                                                                                        x_ajwc)
                                                                                                     :*
                                                                                                       Nil)))))))))))))))))))))))))
                   El (FloorDivide x_ajwd)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                     (NA_I
                                                                                                        (El
                                                                                                           x_ajwd)
                                                                                                        :*
                                                                                                          Nil))))))))))))))))))))))))))
                   El (MatrixMult x_ajwe)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                        (NA_I
                                                                                                           (El
                                                                                                              x_ajwe)
                                                                                                           :*
                                                                                                             Nil)))))))))))))))))))))))))))
                   El (Invert x_ajwf)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                           (NA_I
                                                                                                              (El
                                                                                                                 x_ajwf)
                                                                                                              :*
                                                                                                                Nil))))))))))))))))))))))))))))
                   El (Modulo x_ajwg)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                           (sop-core-0.4.0.0:Data.SOP.NS.S
                                                              (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                 (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                    (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                       (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                          (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                      (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                         (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                            (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                               (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                  (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                     (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                        (sop-core-0.4.0.0:Data.SOP.NS.S
                                                                                                           (sop-core-0.4.0.0:Data.SOP.NS.Z
                                                                                                              (NA_I
                                                                                                                 (El
                                                                                                                    x_ajwg)
                                                                                                                 :*
                                                                                                                   Nil)))))))))))))))))))))))))))))
            IdxMaybeYieldArgSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajwh)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajwh) :* Nil)))
            IdxComprehensionSrcSpan
              -> \case
                   El (Comprehension x_ajwi x_ajwj x_ajwk)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajwi)
                                :* (NA_I (El x_ajwj) :* (NA_I (El x_ajwk) :* Nil))))
            IdxListDictKeyDatumListSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajwl x_ajwm)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwl) :* (NA_I (El x_ajwm) :* Nil))))
            IdxArgumentSrcSpan
              -> \case
                   El (ArgExpr x_ajwn x_ajwo)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajwn) :* (NA_I (El x_ajwo) :* Nil)))
                   El (ArgVarArgsPos x_ajwp x_ajwq)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwp) :* (NA_I (El x_ajwq) :* Nil))))
                   El (ArgVarArgsKeyword x_ajwr x_ajws)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                   (NA_I (El x_ajwr) :* (NA_I (El x_ajws) :* Nil)))))
                   El (ArgKeyword x_ajwt x_ajwu x_ajwv)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z
                                      (NA_I (El x_ajwt)
                                         :* (NA_I (El x_ajwu) :* (NA_I (El x_ajwv) :* Nil)))))))
            IdxSliceSrcSpan
              -> \case
                   El (SliceProper x_ajww x_ajwx x_ajwy x_ajwz)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajww)
                                :*
                                  (NA_I (El x_ajwx)
                                     :* (NA_I (El x_ajwy) :* (NA_I (El x_ajwz) :* Nil)))))
                   El (SliceExpr x_ajwA x_ajwB)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwA) :* (NA_I (El x_ajwB) :* Nil))))
                   El (SliceEllipsis x_ajwC)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajwC) :* Nil))))
            IdxMaybeMaybeExprSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajwD)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajwD) :* Nil)))
            IdxParameterSrcSpan
              -> \case
                   El (Param x_ajwE x_ajwF x_ajwG x_ajwH)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajwE)
                                :*
                                  (NA_I (El x_ajwF)
                                     :* (NA_I (El x_ajwG) :* (NA_I (El x_ajwH) :* Nil)))))
                   El (VarArgsPos x_ajwI x_ajwJ x_ajwK)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwI)
                                   :* (NA_I (El x_ajwJ) :* (NA_I (El x_ajwK) :* Nil)))))
                   El (VarArgsKeyword x_ajwL x_ajwM x_ajwN)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.Z
                                   (NA_I (El x_ajwL)
                                      :* (NA_I (El x_ajwM) :* (NA_I (El x_ajwN) :* Nil))))))
                   El (EndPositional x_ajwO)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajwO) :* Nil)))))
                   El (UnPackTuple x_ajwP x_ajwQ x_ajwR)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.S
                                (sop-core-0.4.0.0:Data.SOP.NS.S
                                   (sop-core-0.4.0.0:Data.SOP.NS.S
                                      (sop-core-0.4.0.0:Data.SOP.NS.Z
                                         (NA_I (El x_ajwP)
                                            :* (NA_I (El x_ajwQ) :* (NA_I (El x_ajwR) :* Nil))))))))
            IdxParamTupleSrcSpan
              -> \case
                   El (ParamTupleName x_ajwS x_ajwT)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajwS) :* (NA_I (El x_ajwT) :* Nil)))
                   El (ParamTuple x_ajwU x_ajwV)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwU) :* (NA_I (El x_ajwV) :* Nil))))
            IdxListParamTupleSrcSpan
              -> \case
                   El [] -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El ((:) x_ajwW x_ajwX)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajwW) :* (NA_I (El x_ajwX) :* Nil))))
            IdxYieldArgSrcSpan
              -> \case
                   El (YieldFrom x_ajwY x_ajwZ)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajwY) :* (NA_I (El x_ajwZ) :* Nil)))
                   El (YieldExpr x_ajx0)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajx0) :* Nil)))
            IdxComprehensionExprSrcSpan
              -> \case
                   El (ComprehensionExpr x_ajx1)
                     -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajx1) :* Nil))
                   El (ComprehensionDict x_ajx2)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajx2) :* Nil)))
            IdxCompForSrcSpan
              -> \case
                   El (CompFor x_ajx3 x_ajx4 x_ajx5 x_ajx6 x_ajx7)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_K (SBool x_ajx3)
                                :*
                                  (NA_I (El x_ajx4)
                                     :*
                                       (NA_I (El x_ajx5)
                                          :* (NA_I (El x_ajx6) :* (NA_I (El x_ajx7) :* Nil))))))
            IdxDictKeyDatumListSrcSpan
              -> \case
                   El (DictMappingPair x_ajx8 x_ajx9)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajx8) :* (NA_I (El x_ajx9) :* Nil)))
                   El (DictUnpacking x_ajxa)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajxa) :* Nil)))
            IdxMaybeCompIterSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajxb)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajxb) :* Nil)))
            IdxCompIterSrcSpan
              -> \case
                   El (IterFor x_ajxc x_ajxd)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxc) :* (NA_I (El x_ajxd) :* Nil)))
                   El (IterIf x_ajxe x_ajxf)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z
                                (NA_I (El x_ajxe) :* (NA_I (El x_ajxf) :* Nil))))
            IdxCompIfSrcSpan
              -> \case
                   El (CompIf x_ajxg x_ajxh x_ajxi)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxg)
                                :* (NA_I (El x_ajxh) :* (NA_I (El x_ajxi) :* Nil))))
            IdxTup1ExprSrcSpanSuiteSrcSpan
              -> \case
                   El ((,) x_ajxj x_ajxk)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxj) :* (NA_I (El x_ajxk) :* Nil)))
            IdxDecoratorSrcSpan
              -> \case
                   El (Decorator x_ajxl x_ajxm x_ajxn)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxl)
                                :* (NA_I (El x_ajxm) :* (NA_I (El x_ajxn) :* Nil))))
            IdxHandlerSrcSpan
              -> \case
                   El (Handler x_ajxo x_ajxp x_ajxq)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxo)
                                :* (NA_I (El x_ajxp) :* (NA_I (El x_ajxq) :* Nil))))
            IdxExceptClauseSrcSpan
              -> \case
                   El (ExceptClause x_ajxr x_ajxs)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxr) :* (NA_I (El x_ajxs) :* Nil)))
            IdxTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   El ((,) x_ajxt x_ajxu)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxt) :* (NA_I (El x_ajxu) :* Nil)))
            IdxMaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   El Nothing -> Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil)
                   El (Just x_ajxv)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.S
                             (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El x_ajxv) :* Nil)))
            IdxTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   El ((,) x_ajxw x_ajxx)
                     -> Rep
                          (sop-core-0.4.0.0:Data.SOP.NS.Z
                             (NA_I (El x_ajxw) :* (NA_I (El x_ajxx) :* Nil)))
      sto'
        = \case
            IdxModuleSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxy) :* Nil))
                     -> El (Module y_ajxy)
            IdxListStatementSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxz) :* (NA_I (El y_ajxA) :* Nil))))
                     -> El (((:) y_ajxz) y_ajxA)
            IdxStatementSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxB) :* (NA_I (El y_ajxC) :* Nil)))
                     -> El ((Import y_ajxB) y_ajxC)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxD) :* (NA_I (El y_ajxE) :* (NA_I (El y_ajxF) :* Nil)))))
                     -> El (((FromImport y_ajxD) y_ajxE) y_ajxF)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxG) :* (NA_I (El y_ajxH) :* (NA_I (El y_ajxI) :* (NA_I (El y_ajxJ) :* Nil)))))))
                     -> El ((((While y_ajxG) y_ajxH) y_ajxI) y_ajxJ)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxK) :* (NA_I (El y_ajxL) :* (NA_I (El y_ajxM) :* (NA_I (El y_ajxN) :* (NA_I (El y_ajxO) :* Nil)))))))))
                     -> El (((((For y_ajxK) y_ajxL) y_ajxM) y_ajxN) y_ajxO)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxP) :* (NA_I (El y_ajxQ) :* Nil)))))))
                     -> El ((AsyncFor y_ajxP) y_ajxQ)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxR) :* (NA_I (El y_ajxS) :* (NA_I (El y_ajxT) :* (NA_I (El y_ajxU) :* (NA_I (El y_ajxV) :* Nil)))))))))))
                     -> El (((((Fun y_ajxR) y_ajxS) y_ajxT) y_ajxU) y_ajxV)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxW) :* (NA_I (El y_ajxX) :* Nil)))))))))
                     -> El ((AsyncFun y_ajxW) y_ajxX)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajxY) :* (NA_I (El y_ajxZ) :* (NA_I (El y_ajy0) :* (NA_I (El y_ajy1) :* Nil))))))))))))
                     -> El ((((Class y_ajxY) y_ajxZ) y_ajy0) y_ajy1)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajy2) :* (NA_I (El y_ajy3) :* (NA_I (El y_ajy4) :* Nil))))))))))))
                     -> El (((Conditional y_ajy2) y_ajy3) y_ajy4)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajy5) :* (NA_I (El y_ajy6) :* (NA_I (El y_ajy7) :* Nil)))))))))))))
                     -> El (((Assign y_ajy5) y_ajy6) y_ajy7)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajy8) :* (NA_I (El y_ajy9) :* (NA_I (El y_ajya) :* (NA_I (El y_ajyb) :* Nil)))))))))))))))
                     -> El ((((AugmentedAssign y_ajy8) y_ajy9) y_ajya) y_ajyb)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyc) :* (NA_I (El y_ajyd) :* (NA_I (El y_ajye) :* (NA_I (El y_ajyf) :* Nil))))))))))))))))
                     -> El ((((AnnotatedAssign y_ajyc) y_ajyd) y_ajye) y_ajyf)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyg) :* (NA_I (El y_ajyh) :* (NA_I (El y_ajyi) :* Nil))))))))))))))))
                     -> El (((Decorated y_ajyg) y_ajyh) y_ajyi)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyj) :* (NA_I (El y_ajyk) :* Nil))))))))))))))))
                     -> El ((Return y_ajyj) y_ajyk)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyl) :* (NA_I (El y_ajym) :* (NA_I (El y_ajyn) :* (NA_I (El y_ajyo) :* (NA_I (El y_ajyp) :* Nil))))))))))))))))))))
                     -> El (((((Try y_ajyl) y_ajym) y_ajyn) y_ajyo) y_ajyp)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyq) :* (NA_I (El y_ajyr) :* Nil))))))))))))))))))
                     -> El ((Raise y_ajyq) y_ajyr)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajys) :* (NA_I (El y_ajyt) :* (NA_I (El y_ajyu) :* Nil))))))))))))))))))))
                     -> El (((With y_ajys) y_ajyt) y_ajyu)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyv) :* (NA_I (El y_ajyw) :* Nil))))))))))))))))))))
                     -> El ((AsyncWith y_ajyv) y_ajyw)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyx) :* Nil))))))))))))))))))))
                     -> El (Pass y_ajyx)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyy) :* Nil)))))))))))))))))))))
                     -> El (Break y_ajyy)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyz) :* Nil))))))))))))))))))))))
                     -> El (Continue y_ajyz)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyA) :* (NA_I (El y_ajyB) :* Nil))))))))))))))))))))))))
                     -> El ((Delete y_ajyA) y_ajyB)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyC) :* (NA_I (El y_ajyD) :* Nil)))))))))))))))))))))))))
                     -> El ((StmtExpr y_ajyC) y_ajyD)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyE) :* (NA_I (El y_ajyF) :* Nil))))))))))))))))))))))))))
                     -> El ((Global y_ajyE) y_ajyF)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyG) :* (NA_I (El y_ajyH) :* Nil)))))))))))))))))))))))))))
                     -> El ((NonLocal y_ajyG) y_ajyH)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyI) :* (NA_I (El y_ajyJ) :* Nil))))))))))))))))))))))))))))
                     -> El ((Assert y_ajyI) y_ajyJ)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SBool y_ajyK) :* (NA_I (El y_ajyL) :* (NA_K (SBool y_ajyM) :* (NA_I (El y_ajyN) :* Nil)))))))))))))))))))))))))))))))
                     -> El ((((Print y_ajyK) y_ajyL) y_ajyM) y_ajyN)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyO) :* (NA_I (El y_ajyP) :* (NA_I (El y_ajyQ) :* Nil)))))))))))))))))))))))))))))))
                     -> El (((Exec y_ajyO) y_ajyP) y_ajyQ)
            IdxListImportItemSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajyR) :* (NA_I (El y_ajyS) :* Nil))))
                     -> El (((:) y_ajyR) y_ajyS)
            IdxSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SString y_ajyT) :* (NA_K (SInt y_ajyU) :* (NA_K (SInt y_ajyV) :* (NA_K (SInt y_ajyW) :* Nil)))))
                     -> El ((((SpanCoLinear y_ajyT) y_ajyU) y_ajyV) y_ajyW)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SString y_ajyX) :* (NA_K (SInt y_ajyY) :* (NA_K (SInt y_ajyZ) :* (NA_K (SInt y_ajz0) :* (NA_K (SInt y_ajz1) :* Nil)))))))
                     -> El (((((SpanMultiLine y_ajyX) y_ajyY) y_ajyZ) y_ajz0) y_ajz1)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SString y_ajz2) :* (NA_K (SInt y_ajz3) :* (NA_K (SInt y_ajz4) :* Nil))))))
                     -> El (((SpanPoint y_ajz2) y_ajz3) y_ajz4)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z Nil))))
                     -> El SpanEmpty
            IdxImportRelativeSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SInt y_ajz5) :* (NA_I (El y_ajz6) :* (NA_I (El y_ajz7) :* Nil))))
                     -> El (((ImportRelative y_ajz5) y_ajz6) y_ajz7)
            IdxFromItemsSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajz8) :* Nil))
                     -> El (ImportEverything y_ajz8)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajz9) :* (NA_I (El y_ajza) :* Nil))))
                     -> El ((FromItems y_ajz9) y_ajza)
            IdxExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzb) :* (NA_I (El y_ajzc) :* Nil)))
                     -> El ((Var y_ajzb) y_ajzc)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SInteger y_ajzd) :* (NA_K (SString y_ajze) :* (NA_I (El y_ajzf) :* Nil)))))
                     -> El (((Int y_ajzd) y_ajze) y_ajzf)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SInteger y_ajzg) :* (NA_K (SString y_ajzh) :* (NA_I (El y_ajzi) :* Nil))))))
                     -> El (((LongInt y_ajzg) y_ajzh) y_ajzi)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SDouble y_ajzj) :* (NA_K (SString y_ajzk) :* (NA_I (El y_ajzl) :* Nil)))))))
                     -> El (((Float y_ajzj) y_ajzk) y_ajzl)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SDouble y_ajzm) :* (NA_K (SString y_ajzn) :* (NA_I (El y_ajzo) :* Nil))))))))
                     -> El (((Imaginary y_ajzm) y_ajzn) y_ajzo)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SBool y_ajzp) :* (NA_I (El y_ajzq) :* Nil))))))))
                     -> El ((Bool y_ajzp) y_ajzq)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzr) :* Nil))))))))
                     -> El (None y_ajzr)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzs) :* Nil)))))))))
                     -> El (Ellipsis y_ajzs)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzt) :* (NA_I (El y_ajzu) :* Nil)))))))))))
                     -> El ((ByteStrings y_ajzt) y_ajzu)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzv) :* (NA_I (El y_ajzw) :* Nil))))))))))))
                     -> El ((Strings y_ajzv) y_ajzw)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzx) :* (NA_I (El y_ajzy) :* Nil)))))))))))))
                     -> El ((UnicodeStrings y_ajzx) y_ajzy)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzz) :* (NA_I (El y_ajzA) :* (NA_I (El y_ajzB) :* Nil)))))))))))))))
                     -> El (((Call y_ajzz) y_ajzA) y_ajzB)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzC) :* (NA_I (El y_ajzD) :* (NA_I (El y_ajzE) :* Nil))))))))))))))))
                     -> El (((Subscript y_ajzC) y_ajzD) y_ajzE)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzF) :* (NA_I (El y_ajzG) :* (NA_I (El y_ajzH) :* Nil)))))))))))))))))
                     -> El (((SlicedExpr y_ajzF) y_ajzG) y_ajzH)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzI) :* (NA_I (El y_ajzJ) :* (NA_I (El y_ajzK) :* (NA_I (El y_ajzL) :* Nil)))))))))))))))))))
                     -> El ((((CondExpr y_ajzI) y_ajzJ) y_ajzK) y_ajzL)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzM) :* (NA_I (El y_ajzN) :* (NA_I (El y_ajzO) :* (NA_I (El y_ajzP) :* Nil))))))))))))))))))))
                     -> El ((((BinaryOp y_ajzM) y_ajzN) y_ajzO) y_ajzP)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzQ) :* (NA_I (El y_ajzR) :* (NA_I (El y_ajzS) :* Nil))))))))))))))))))))
                     -> El (((UnaryOp y_ajzQ) y_ajzR) y_ajzS)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzT) :* (NA_I (El y_ajzU) :* (NA_I (El y_ajzV) :* Nil)))))))))))))))))))))
                     -> El (((Dot y_ajzT) y_ajzU) y_ajzV)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzW) :* (NA_I (El y_ajzX) :* (NA_I (El y_ajzY) :* Nil))))))))))))))))))))))
                     -> El (((Lambda y_ajzW) y_ajzX) y_ajzY)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajzZ) :* (NA_I (El y_ajA0) :* Nil))))))))))))))))))))))
                     -> El ((Tuple y_ajzZ) y_ajA0)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajA1) :* (NA_I (El y_ajA2) :* Nil)))))))))))))))))))))))
                     -> El ((Yield y_ajA1) y_ajA2)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajA3) :* (NA_I (El y_ajA4) :* Nil))))))))))))))))))))))))
                     -> El ((Generator y_ajA3) y_ajA4)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajA5) :* (NA_I (El y_ajA6) :* Nil)))))))))))))))))))))))))
                     -> El ((Await y_ajA5) y_ajA6)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajA7) :* (NA_I (El y_ajA8) :* Nil))))))))))))))))))))))))))
                     -> El ((ListComp y_ajA7) y_ajA8)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajA9) :* (NA_I (El y_ajAa) :* Nil)))))))))))))))))))))))))))
                     -> El ((List y_ajA9) y_ajAa)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAb) :* (NA_I (El y_ajAc) :* Nil))))))))))))))))))))))))))))
                     -> El ((Dictionary y_ajAb) y_ajAc)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAd) :* (NA_I (El y_ajAe) :* Nil)))))))))))))))))))))))))))))
                     -> El ((DictComp y_ajAd) y_ajAe)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAf) :* (NA_I (El y_ajAg) :* Nil))))))))))))))))))))))))))))))
                     -> El ((Set y_ajAf) y_ajAg)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAh) :* (NA_I (El y_ajAi) :* Nil)))))))))))))))))))))))))))))))
                     -> El ((SetComp y_ajAh) y_ajAi)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAj) :* (NA_I (El y_ajAk) :* Nil))))))))))))))))))))))))))))))))
                     -> El ((Starred y_ajAj) y_ajAk)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAl) :* (NA_I (El y_ajAm) :* Nil)))))))))))))))))))))))))))))))))
                     -> El ((Paren y_ajAl) y_ajAm)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAn) :* (NA_I (El y_ajAo) :* Nil))))))))))))))))))))))))))))))))))
                     -> El ((StringConversion y_ajAn) y_ajAo)
            IdxSuiteSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAp) :* (NA_I (El y_ajAq) :* Nil))))
                     -> El (((:) y_ajAp) y_ajAq)
            IdxListExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAr) :* (NA_I (El y_ajAs) :* Nil))))
                     -> El (((:) y_ajAr) y_ajAs)
            IdxIdentSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SString y_ajAt) :* (NA_I (El y_ajAu) :* Nil)))
                     -> El ((Ident y_ajAt) y_ajAu)
            IdxListParameterSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAv) :* (NA_I (El y_ajAw) :* Nil))))
                     -> El (((:) y_ajAv) y_ajAw)
            IdxMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAx) :* Nil)))
                     -> El (Just y_ajAx)
            IdxListArgumentSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAy) :* (NA_I (El y_ajAz) :* Nil))))
                     -> El (((:) y_ajAy) y_ajAz)
            IdxListTup1ExprSrcSpanSuiteSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAA) :* (NA_I (El y_ajAB) :* Nil))))
                     -> El (((:) y_ajAA) y_ajAB)
            IdxAssignOpSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAC) :* Nil))
                     -> El (PlusAssign y_ajAC)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAD) :* Nil)))
                     -> El (MinusAssign y_ajAD)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAE) :* Nil))))
                     -> El (MultAssign y_ajAE)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAF) :* Nil)))))
                     -> El (DivAssign y_ajAF)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAG) :* Nil))))))
                     -> El (ModAssign y_ajAG)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAH) :* Nil)))))))
                     -> El (PowAssign y_ajAH)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAI) :* Nil))))))))
                     -> El (BinAndAssign y_ajAI)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAJ) :* Nil)))))))))
                     -> El (BinOrAssign y_ajAJ)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAK) :* Nil))))))))))
                     -> El (BinXorAssign y_ajAK)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAL) :* Nil)))))))))))
                     -> El (LeftShiftAssign y_ajAL)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAM) :* Nil))))))))))))
                     -> El (RightShiftAssign y_ajAM)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAN) :* Nil)))))))))))))
                     -> El (FloorDivAssign y_ajAN)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAO) :* Nil))))))))))))))
                     -> El (MatrixMultAssign y_ajAO)
            IdxListDecoratorSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAP) :* (NA_I (El y_ajAQ) :* Nil))))
                     -> El (((:) y_ajAP) y_ajAQ)
            IdxListHandlerSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAR) :* (NA_I (El y_ajAS) :* Nil))))
                     -> El (((:) y_ajAR) y_ajAS)
            IdxRaiseExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAT) :* Nil))
                     -> El (RaiseV3 y_ajAT)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAU) :* Nil)))
                     -> El (RaiseV2 y_ajAU)
            IdxListTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAV) :* (NA_I (El y_ajAW) :* Nil))))
                     -> El (((:) y_ajAV) y_ajAW)
            IdxListIdentSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAX) :* (NA_I (El y_ajAY) :* Nil))))
                     -> El (((:) y_ajAX) y_ajAY)
            IdxMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajAZ) :* Nil)))
                     -> El (Just y_ajAZ)
            IdxImportItemSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB0) :* (NA_I (El y_ajB1) :* (NA_I (El y_ajB2) :* Nil))))
                     -> El (((ImportItem y_ajB0) y_ajB1) y_ajB2)
            IdxDottedNameSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB3) :* (NA_I (El y_ajB4) :* Nil))))
                     -> El (((:) y_ajB3) y_ajB4)
            IdxMaybeIdentSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB5) :* Nil)))
                     -> El (Just y_ajB5)
            IdxMaybeDottedNameSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB6) :* Nil)))
                     -> El (Just y_ajB6)
            IdxListFromItemSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB7) :* (NA_I (El y_ajB8) :* Nil))))
                     -> El (((:) y_ajB7) y_ajB8)
            IdxFromItemSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajB9) :* (NA_I (El y_ajBa) :* (NA_I (El y_ajBb) :* Nil))))
                     -> El (((FromItem y_ajB9) y_ajBa) y_ajBb)
            IdxListString
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SString y_ajBc) :* (NA_I (El y_ajBd) :* Nil))))
                     -> El (((:) y_ajBc) y_ajBd)
            IdxListSliceSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBe) :* (NA_I (El y_ajBf) :* Nil))))
                     -> El (((:) y_ajBe) y_ajBf)
            IdxOpSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBg) :* Nil))
                     -> El (And y_ajBg)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBh) :* Nil)))
                     -> El (Or y_ajBh)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBi) :* Nil))))
                     -> El (Not y_ajBi)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBj) :* Nil)))))
                     -> El (Exponent y_ajBj)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBk) :* Nil))))))
                     -> El (LessThan y_ajBk)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBl) :* Nil)))))))
                     -> El (GreaterThan y_ajBl)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBm) :* Nil))))))))
                     -> El (Equality y_ajBm)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBn) :* Nil)))))))))
                     -> El (GreaterThanEquals y_ajBn)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBo) :* Nil))))))))))
                     -> El (LessThanEquals y_ajBo)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBp) :* Nil)))))))))))
                     -> El (NotEquals y_ajBp)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBq) :* Nil))))))))))))
                     -> El (NotEqualsV2 y_ajBq)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBr) :* Nil)))))))))))))
                     -> El (In y_ajBr)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBs) :* Nil))))))))))))))
                     -> El (Is y_ajBs)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBt) :* Nil)))))))))))))))
                     -> El (IsNot y_ajBt)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBu) :* Nil))))))))))))))))
                     -> El (NotIn y_ajBu)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBv) :* Nil)))))))))))))))))
                     -> El (BinaryOr y_ajBv)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBw) :* Nil))))))))))))))))))
                     -> El (Xor y_ajBw)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBx) :* Nil)))))))))))))))))))
                     -> El (BinaryAnd y_ajBx)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBy) :* Nil))))))))))))))))))))
                     -> El (ShiftLeft y_ajBy)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBz) :* Nil)))))))))))))))))))))
                     -> El (ShiftRight y_ajBz)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBA) :* Nil))))))))))))))))))))))
                     -> El (Multiply y_ajBA)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBB) :* Nil)))))))))))))))))))))))
                     -> El (Plus y_ajBB)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBC) :* Nil))))))))))))))))))))))))
                     -> El (Minus y_ajBC)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBD) :* Nil)))))))))))))))))))))))))
                     -> El (Divide y_ajBD)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBE) :* Nil))))))))))))))))))))))))))
                     -> El (FloorDivide y_ajBE)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBF) :* Nil)))))))))))))))))))))))))))
                     -> El (MatrixMult y_ajBF)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBG) :* Nil))))))))))))))))))))))))))))
                     -> El (Invert y_ajBG)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBH) :* Nil)))))))))))))))))))))))))))))
                     -> El (Modulo y_ajBH)
            IdxMaybeYieldArgSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBI) :* Nil)))
                     -> El (Just y_ajBI)
            IdxComprehensionSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBJ) :* (NA_I (El y_ajBK) :* (NA_I (El y_ajBL) :* Nil))))
                     -> El (((Comprehension y_ajBJ) y_ajBK) y_ajBL)
            IdxListDictKeyDatumListSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBM) :* (NA_I (El y_ajBN) :* Nil))))
                     -> El (((:) y_ajBM) y_ajBN)
            IdxArgumentSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBO) :* (NA_I (El y_ajBP) :* Nil)))
                     -> El ((ArgExpr y_ajBO) y_ajBP)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBQ) :* (NA_I (El y_ajBR) :* Nil))))
                     -> El ((ArgVarArgsPos y_ajBQ) y_ajBR)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBS) :* (NA_I (El y_ajBT) :* Nil)))))
                     -> El ((ArgVarArgsKeyword y_ajBS) y_ajBT)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBU) :* (NA_I (El y_ajBV) :* (NA_I (El y_ajBW) :* Nil)))))))
                     -> El (((ArgKeyword y_ajBU) y_ajBV) y_ajBW)
            IdxSliceSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajBX) :* (NA_I (El y_ajBY) :* (NA_I (El y_ajBZ) :* (NA_I (El y_ajC0) :* Nil)))))
                     -> El ((((SliceProper y_ajBX) y_ajBY) y_ajBZ) y_ajC0)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajC1) :* (NA_I (El y_ajC2) :* Nil))))
                     -> El ((SliceExpr y_ajC1) y_ajC2)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajC3) :* Nil))))
                     -> El (SliceEllipsis y_ajC3)
            IdxMaybeMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajC4) :* Nil)))
                     -> El (Just y_ajC4)
            IdxParameterSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajC5) :* (NA_I (El y_ajC6) :* (NA_I (El y_ajC7) :* (NA_I (El y_ajC8) :* Nil)))))
                     -> El ((((Param y_ajC5) y_ajC6) y_ajC7) y_ajC8)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajC9) :* (NA_I (El y_ajCa) :* (NA_I (El y_ajCb) :* Nil)))))
                     -> El (((VarArgsPos y_ajC9) y_ajCa) y_ajCb)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCc) :* (NA_I (El y_ajCd) :* (NA_I (El y_ajCe) :* Nil))))))
                     -> El (((VarArgsKeyword y_ajCc) y_ajCd) y_ajCe)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCf) :* Nil)))))
                     -> El (EndPositional y_ajCf)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCg) :* (NA_I (El y_ajCh) :* (NA_I (El y_ajCi) :* Nil))))))))
                     -> El (((UnPackTuple y_ajCg) y_ajCh) y_ajCi)
            IdxParamTupleSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCj) :* (NA_I (El y_ajCk) :* Nil)))
                     -> El ((ParamTupleName y_ajCj) y_ajCk)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCl) :* (NA_I (El y_ajCm) :* Nil))))
                     -> El ((ParamTuple y_ajCl) y_ajCm)
            IdxListParamTupleSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El []
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCn) :* (NA_I (El y_ajCo) :* Nil))))
                     -> El (((:) y_ajCn) y_ajCo)
            IdxYieldArgSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCp) :* (NA_I (El y_ajCq) :* Nil)))
                     -> El ((YieldFrom y_ajCp) y_ajCq)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCr) :* Nil)))
                     -> El (YieldExpr y_ajCr)
            IdxComprehensionExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCs) :* Nil))
                     -> El (ComprehensionExpr y_ajCs)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCt) :* Nil)))
                     -> El (ComprehensionDict y_ajCt)
            IdxCompForSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_K (SBool y_ajCu) :* (NA_I (El y_ajCv) :* (NA_I (El y_ajCw) :* (NA_I (El y_ajCx) :* (NA_I (El y_ajCy) :* Nil))))))
                     -> El (((((CompFor y_ajCu) y_ajCv) y_ajCw) y_ajCx) y_ajCy)
            IdxDictKeyDatumListSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCz) :* (NA_I (El y_ajCA) :* Nil)))
                     -> El ((DictMappingPair y_ajCz) y_ajCA)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCB) :* Nil)))
                     -> El (DictUnpacking y_ajCB)
            IdxMaybeCompIterSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCC) :* Nil)))
                     -> El (Just y_ajCC)
            IdxCompIterSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCD) :* (NA_I (El y_ajCE) :* Nil)))
                     -> El ((IterFor y_ajCD) y_ajCE)
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCF) :* (NA_I (El y_ajCG) :* Nil))))
                     -> El ((IterIf y_ajCF) y_ajCG)
            IdxCompIfSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCH) :* (NA_I (El y_ajCI) :* (NA_I (El y_ajCJ) :* Nil))))
                     -> El (((CompIf y_ajCH) y_ajCI) y_ajCJ)
            IdxTup1ExprSrcSpanSuiteSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCK) :* (NA_I (El y_ajCL) :* Nil)))
                     -> El (((,) y_ajCK) y_ajCL)
            IdxDecoratorSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCM) :* (NA_I (El y_ajCN) :* (NA_I (El y_ajCO) :* Nil))))
                     -> El (((Decorator y_ajCM) y_ajCN) y_ajCO)
            IdxHandlerSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCP) :* (NA_I (El y_ajCQ) :* (NA_I (El y_ajCR) :* Nil))))
                     -> El (((Handler y_ajCP) y_ajCQ) y_ajCR)
            IdxExceptClauseSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCS) :* (NA_I (El y_ajCT) :* Nil)))
                     -> El ((ExceptClause y_ajCS) y_ajCT)
            IdxTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCU) :* (NA_I (El y_ajCV) :* Nil)))
                     -> El (((,) y_ajCU) y_ajCV)
            IdxMaybeTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z Nil) -> El Nothing
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.S (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCW) :* Nil)))
                     -> El (Just y_ajCW)
            IdxTup1ExprSrcSpanMaybeTup1ExprSrcSpanMaybeExprSrcSpan
              -> \case
                   Rep (sop-core-0.4.0.0:Data.SOP.NS.Z (NA_I (El y_ajCX) :* (NA_I (El y_ajCY) :* Nil)))
                     -> El (((,) y_ajCX) y_ajCY)
    instance HasDatatypeInfo Singl FamModuleSrcSpan CodesModuleSrcSpan where
      datatypeInfo _
        = \case
            SZ
              -> ((New "Language.Python.Common.AST")
                    (Name "Module" :@: Name "SrcSpan"))
                   (Constructor "Module")
            SS SZ
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Statement" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS SZ)
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Statement" :@: Name "SrcSpan"))
                   ((Record "Import")
                      (FieldInfo "import_items" :* (FieldInfo "stmt_annot" :* Nil))
                      :*
                        ((Record "FromImport")
                           (FieldInfo "from_module"
                              :* (FieldInfo "from_items" :* (FieldInfo "stmt_annot" :* Nil)))
                           :*
                             ((Record "While")
                                (FieldInfo "while_cond"
                                   :*
                                     (FieldInfo "while_body"
                                        :*
                                          (FieldInfo "while_else"
                                             :* (FieldInfo "stmt_annot" :* Nil))))
                                :*
                                  ((Record "For")
                                     (FieldInfo "for_targets"
                                        :*
                                          (FieldInfo "for_generator"
                                             :*
                                               (FieldInfo "for_body"
                                                  :*
                                                    (FieldInfo "for_else"
                                                       :* (FieldInfo "stmt_annot" :* Nil)))))
                                     :*
                                       ((Record "AsyncFor")
                                          (FieldInfo "for_stmt" :* (FieldInfo "stmt_annot" :* Nil))
                                          :*
                                            ((Record "Fun")
                                               (FieldInfo "fun_name"
                                                  :*
                                                    (FieldInfo "fun_args"
                                                       :*
                                                         (FieldInfo "fun_result_annotation"
                                                            :*
                                                              (FieldInfo "fun_body"
                                                                 :*
                                                                   (FieldInfo "stmt_annot"
                                                                      :* Nil)))))
                                               :*
                                                 ((Record "AsyncFun")
                                                    (FieldInfo "fun_def"
                                                       :* (FieldInfo "stmt_annot" :* Nil))
                                                    :*
                                                      ((Record "Class")
                                                         (FieldInfo "class_name"
                                                            :*
                                                              (FieldInfo "class_args"
                                                                 :*
                                                                   (FieldInfo "class_body"
                                                                      :*
                                                                        (FieldInfo "stmt_annot"
                                                                           :* Nil))))
                                                         :*
                                                           ((Record "Conditional")
                                                              (FieldInfo "cond_guards"
                                                                 :*
                                                                   (FieldInfo "cond_else"
                                                                      :*
                                                                        (FieldInfo "stmt_annot"
                                                                           :* Nil)))
                                                              :*
                                                                ((Record "Assign")
                                                                   (FieldInfo "assign_to"
                                                                      :*
                                                                        (FieldInfo "assign_expr"
                                                                           :*
                                                                             (FieldInfo "stmt_annot"
                                                                                :* Nil)))
                                                                   :*
                                                                     ((Record "AugmentedAssign")
                                                                        (FieldInfo "aug_assign_to"
                                                                           :*
                                                                             (FieldInfo
                                                                                "aug_assign_op"
                                                                                :*
                                                                                  (FieldInfo
                                                                                     "aug_assign_expr"
                                                                                     :*
                                                                                       (FieldInfo
                                                                                          "stmt_annot"
                                                                                          :* Nil))))
                                                                        :*
                                                                          ((Record
                                                                              "AnnotatedAssign")
                                                                             (FieldInfo
                                                                                "ann_assign_annotation"
                                                                                :*
                                                                                  (FieldInfo
                                                                                     "ann_assign_to"
                                                                                     :*
                                                                                       (FieldInfo
                                                                                          "ann_assign_expr"
                                                                                          :*
                                                                                            (FieldInfo
                                                                                               "stmt_annot"
                                                                                               :*
                                                                                                 Nil))))
                                                                             :*
                                                                               ((Record "Decorated")
                                                                                  (FieldInfo
                                                                                     "decorated_decorators"
                                                                                     :*
                                                                                       (FieldInfo
                                                                                          "decorated_def"
                                                                                          :*
                                                                                            (FieldInfo
                                                                                               "stmt_annot"
                                                                                               :*
                                                                                                 Nil)))
                                                                                  :*
                                                                                    ((Record
                                                                                        "Return")
                                                                                       (FieldInfo
                                                                                          "return_expr"
                                                                                          :*
                                                                                            (FieldInfo
                                                                                               "stmt_annot"
                                                                                               :*
                                                                                                 Nil))
                                                                                       :*
                                                                                         ((Record
                                                                                             "Try")
                                                                                            (FieldInfo
                                                                                               "try_body"
                                                                                               :*
                                                                                                 (FieldInfo
                                                                                                    "try_excepts"
                                                                                                    :*
                                                                                                      (FieldInfo
                                                                                                         "try_else"
                                                                                                         :*
                                                                                                           (FieldInfo
                                                                                                              "try_finally"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "stmt_annot"
                                                                                                                   :*
                                                                                                                     Nil)))))
                                                                                            :*
                                                                                              ((Record
                                                                                                  "Raise")
                                                                                                 (FieldInfo
                                                                                                    "raise_expr"
                                                                                                    :*
                                                                                                      (FieldInfo
                                                                                                         "stmt_annot"
                                                                                                         :*
                                                                                                           Nil))
                                                                                                 :*
                                                                                                   ((Record
                                                                                                       "With")
                                                                                                      (FieldInfo
                                                                                                         "with_context"
                                                                                                         :*
                                                                                                           (FieldInfo
                                                                                                              "with_body"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "stmt_annot"
                                                                                                                   :*
                                                                                                                     Nil)))
                                                                                                      :*
                                                                                                        ((Record
                                                                                                            "AsyncWith")
                                                                                                           (FieldInfo
                                                                                                              "with_stmt"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "stmt_annot"
                                                                                                                   :*
                                                                                                                     Nil))
                                                                                                           :*
                                                                                                             ((Record
                                                                                                                 "Pass")
                                                                                                                (FieldInfo
                                                                                                                   "stmt_annot"
                                                                                                                   :*
                                                                                                                     Nil)
                                                                                                                :*
                                                                                                                  ((Record
                                                                                                                      "Break")
                                                                                                                     (FieldInfo
                                                                                                                        "stmt_annot"
                                                                                                                        :*
                                                                                                                          Nil)
                                                                                                                     :*
                                                                                                                       ((Record
                                                                                                                           "Continue")
                                                                                                                          (FieldInfo
                                                                                                                             "stmt_annot"
                                                                                                                             :*
                                                                                                                               Nil)
                                                                                                                          :*
                                                                                                                            ((Record
                                                                                                                                "Delete")
                                                                                                                               (FieldInfo
                                                                                                                                  "del_exprs"
                                                                                                                                  :*
                                                                                                                                    (FieldInfo
                                                                                                                                       "stmt_annot"
                                                                                                                                       :*
                                                                                                                                         Nil))
                                                                                                                               :*
                                                                                                                                 ((Record
                                                                                                                                     "StmtExpr")
                                                                                                                                    (FieldInfo
                                                                                                                                       "stmt_expr"
                                                                                                                                       :*
                                                                                                                                         (FieldInfo
                                                                                                                                            "stmt_annot"
                                                                                                                                            :*
                                                                                                                                              Nil))
                                                                                                                                    :*
                                                                                                                                      ((Record
                                                                                                                                          "Global")
                                                                                                                                         (FieldInfo
                                                                                                                                            "global_vars"
                                                                                                                                            :*
                                                                                                                                              (FieldInfo
                                                                                                                                                 "stmt_annot"
                                                                                                                                                 :*
                                                                                                                                                   Nil))
                                                                                                                                         :*
                                                                                                                                           ((Record
                                                                                                                                               "NonLocal")
                                                                                                                                              (FieldInfo
                                                                                                                                                 "nonLocal_vars"
                                                                                                                                                 :*
                                                                                                                                                   (FieldInfo
                                                                                                                                                      "stmt_annot"
                                                                                                                                                      :*
                                                                                                                                                        Nil))
                                                                                                                                              :*
                                                                                                                                                ((Record
                                                                                                                                                    "Assert")
                                                                                                                                                   (FieldInfo
                                                                                                                                                      "assert_exprs"
                                                                                                                                                      :*
                                                                                                                                                        (FieldInfo
                                                                                                                                                           "stmt_annot"
                                                                                                                                                           :*
                                                                                                                                                             Nil))
                                                                                                                                                   :*
                                                                                                                                                     ((Record
                                                                                                                                                         "Print")
                                                                                                                                                        (FieldInfo
                                                                                                                                                           "print_chevron"
                                                                                                                                                           :*
                                                                                                                                                             (FieldInfo
                                                                                                                                                                "print_exprs"
                                                                                                                                                                :*
                                                                                                                                                                  (FieldInfo
                                                                                                                                                                     "print_trailing_comma"
                                                                                                                                                                     :*
                                                                                                                                                                       (FieldInfo
                                                                                                                                                                          "stmt_annot"
                                                                                                                                                                          :*
                                                                                                                                                                            Nil))))
                                                                                                                                                        :*
                                                                                                                                                          ((Record
                                                                                                                                                              "Exec")
                                                                                                                                                             (FieldInfo
                                                                                                                                                                "exec_expr"
                                                                                                                                                                :*
                                                                                                                                                                  (FieldInfo
                                                                                                                                                                     "exec_globals_locals"
                                                                                                                                                                     :*
                                                                                                                                                                       (FieldInfo
                                                                                                                                                                          "stmt_annot"
                                                                                                                                                                          :*
                                                                                                                                                                            Nil)))
                                                                                                                                                             :*
                                                                                                                                                               Nil))))))))))))))))))))))))))))
            SS (SS (SS SZ))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "ImportItem" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS SZ)))
              -> ((ADT "Language.Python.Common.SrcLocation") (Name "SrcSpan"))
                   ((Record "SpanCoLinear")
                      (FieldInfo "span_filename"
                         :*
                           (FieldInfo "span_row"
                              :*
                                (FieldInfo "span_start_column"
                                   :* (FieldInfo "span_end_column" :* Nil))))
                      :*
                        ((Record "SpanMultiLine")
                           (FieldInfo "span_filename"
                              :*
                                (FieldInfo "span_start_row"
                                   :*
                                     (FieldInfo "span_start_column"
                                        :*
                                          (FieldInfo "span_end_row"
                                             :* (FieldInfo "span_end_column" :* Nil)))))
                           :*
                             ((Record "SpanPoint")
                                (FieldInfo "span_filename"
                                   :* (FieldInfo "span_row" :* (FieldInfo "span_column" :* Nil)))
                                :* (Constructor "SpanEmpty" :* Nil))))
            SS (SS (SS (SS (SS SZ))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "ImportRelative" :@: Name "SrcSpan"))
                   ((Record "ImportRelative")
                      (FieldInfo "import_relative_dots"
                         :*
                           (FieldInfo "import_relative_module"
                              :* (FieldInfo "import_relative_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS SZ)))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "FromItems" :@: Name "SrcSpan"))
                   ((Record "ImportEverything") (FieldInfo "from_items_annot" :* Nil)
                      :*
                        ((Record "FromItems")
                           (FieldInfo "from_items_items"
                              :* (FieldInfo "from_items_annot" :* Nil))
                           :* Nil))
            SS (SS (SS (SS (SS (SS (SS SZ))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Expr" :@: Name "SrcSpan"))
                   ((Record "Var")
                      (FieldInfo "var_ident" :* (FieldInfo "expr_annot" :* Nil))
                      :*
                        ((Record "Int")
                           (FieldInfo "int_value"
                              :* (FieldInfo "expr_literal" :* (FieldInfo "expr_annot" :* Nil)))
                           :*
                             ((Record "LongInt")
                                (FieldInfo "int_value"
                                   :* (FieldInfo "expr_literal" :* (FieldInfo "expr_annot" :* Nil)))
                                :*
                                  ((Record "Float")
                                     (FieldInfo "float_value"
                                        :*
                                          (FieldInfo "expr_literal"
                                             :* (FieldInfo "expr_annot" :* Nil)))
                                     :*
                                       ((Record "Imaginary")
                                          (FieldInfo "imaginary_value"
                                             :*
                                               (FieldInfo "expr_literal"
                                                  :* (FieldInfo "expr_annot" :* Nil)))
                                          :*
                                            ((Record "Bool")
                                               (FieldInfo "bool_value"
                                                  :* (FieldInfo "expr_annot" :* Nil))
                                               :*
                                                 ((Record "None") (FieldInfo "expr_annot" :* Nil)
                                                    :*
                                                      ((Record "Ellipsis")
                                                         (FieldInfo "expr_annot" :* Nil)
                                                         :*
                                                           ((Record "ByteStrings")
                                                              (FieldInfo "byte_string_strings"
                                                                 :* (FieldInfo "expr_annot" :* Nil))
                                                              :*
                                                                ((Record "Strings")
                                                                   (FieldInfo "strings_strings"
                                                                      :*
                                                                        (FieldInfo "expr_annot"
                                                                           :* Nil))
                                                                   :*
                                                                     ((Record "UnicodeStrings")
                                                                        (FieldInfo
                                                                           "unicodestrings_strings"
                                                                           :*
                                                                             (FieldInfo "expr_annot"
                                                                                :* Nil))
                                                                        :*
                                                                          ((Record "Call")
                                                                             (FieldInfo "call_fun"
                                                                                :*
                                                                                  (FieldInfo
                                                                                     "call_args"
                                                                                     :*
                                                                                       (FieldInfo
                                                                                          "expr_annot"
                                                                                          :* Nil)))
                                                                             :*
                                                                               ((Record "Subscript")
                                                                                  (FieldInfo
                                                                                     "subscriptee"
                                                                                     :*
                                                                                       (FieldInfo
                                                                                          "subscript_expr"
                                                                                          :*
                                                                                            (FieldInfo
                                                                                               "expr_annot"
                                                                                               :*
                                                                                                 Nil)))
                                                                                  :*
                                                                                    ((Record
                                                                                        "SlicedExpr")
                                                                                       (FieldInfo
                                                                                          "slicee"
                                                                                          :*
                                                                                            (FieldInfo
                                                                                               "slices"
                                                                                               :*
                                                                                                 (FieldInfo
                                                                                                    "expr_annot"
                                                                                                    :*
                                                                                                      Nil)))
                                                                                       :*
                                                                                         ((Record
                                                                                             "CondExpr")
                                                                                            (FieldInfo
                                                                                               "ce_true_branch"
                                                                                               :*
                                                                                                 (FieldInfo
                                                                                                    "ce_condition"
                                                                                                    :*
                                                                                                      (FieldInfo
                                                                                                         "ce_false_branch"
                                                                                                         :*
                                                                                                           (FieldInfo
                                                                                                              "expr_annot"
                                                                                                              :*
                                                                                                                Nil))))
                                                                                            :*
                                                                                              ((Record
                                                                                                  "BinaryOp")
                                                                                                 (FieldInfo
                                                                                                    "operator"
                                                                                                    :*
                                                                                                      (FieldInfo
                                                                                                         "left_op_arg"
                                                                                                         :*
                                                                                                           (FieldInfo
                                                                                                              "right_op_arg"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "expr_annot"
                                                                                                                   :*
                                                                                                                     Nil))))
                                                                                                 :*
                                                                                                   ((Record
                                                                                                       "UnaryOp")
                                                                                                      (FieldInfo
                                                                                                         "operator"
                                                                                                         :*
                                                                                                           (FieldInfo
                                                                                                              "op_arg"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "expr_annot"
                                                                                                                   :*
                                                                                                                     Nil)))
                                                                                                      :*
                                                                                                        ((Record
                                                                                                            "Dot")
                                                                                                           (FieldInfo
                                                                                                              "dot_expr"
                                                                                                              :*
                                                                                                                (FieldInfo
                                                                                                                   "dot_attribute"
                                                                                                                   :*
                                                                                                                     (FieldInfo
                                                                                                                        "expr_annot"
                                                                                                                        :*
                                                                                                                          Nil)))
                                                                                                           :*
                                                                                                             ((Record
                                                                                                                 "Lambda")
                                                                                                                (FieldInfo
                                                                                                                   "lambda_args"
                                                                                                                   :*
                                                                                                                     (FieldInfo
                                                                                                                        "lambda_body"
                                                                                                                        :*
                                                                                                                          (FieldInfo
                                                                                                                             "expr_annot"
                                                                                                                             :*
                                                                                                                               Nil)))
                                                                                                                :*
                                                                                                                  ((Record
                                                                                                                      "Tuple")
                                                                                                                     (FieldInfo
                                                                                                                        "tuple_exprs"
                                                                                                                        :*
                                                                                                                          (FieldInfo
                                                                                                                             "expr_annot"
                                                                                                                             :*
                                                                                                                               Nil))
                                                                                                                     :*
                                                                                                                       ((Record
                                                                                                                           "Yield")
                                                                                                                          (FieldInfo
                                                                                                                             "yield_arg"
                                                                                                                             :*
                                                                                                                               (FieldInfo
                                                                                                                                  "expr_annot"
                                                                                                                                  :*
                                                                                                                                    Nil))
                                                                                                                          :*
                                                                                                                            ((Record
                                                                                                                                "Generator")
                                                                                                                               (FieldInfo
                                                                                                                                  "gen_comprehension"
                                                                                                                                  :*
                                                                                                                                    (FieldInfo
                                                                                                                                       "expr_annot"
                                                                                                                                       :*
                                                                                                                                         Nil))
                                                                                                                               :*
                                                                                                                                 ((Record
                                                                                                                                     "Await")
                                                                                                                                    (FieldInfo
                                                                                                                                       "await_expr"
                                                                                                                                       :*
                                                                                                                                         (FieldInfo
                                                                                                                                            "expr_annot"
                                                                                                                                            :*
                                                                                                                                              Nil))
                                                                                                                                    :*
                                                                                                                                      ((Record
                                                                                                                                          "ListComp")
                                                                                                                                         (FieldInfo
                                                                                                                                            "list_comprehension"
                                                                                                                                            :*
                                                                                                                                              (FieldInfo
                                                                                                                                                 "expr_annot"
                                                                                                                                                 :*
                                                                                                                                                   Nil))
                                                                                                                                         :*
                                                                                                                                           ((Record
                                                                                                                                               "List")
                                                                                                                                              (FieldInfo
                                                                                                                                                 "list_exprs"
                                                                                                                                                 :*
                                                                                                                                                   (FieldInfo
                                                                                                                                                      "expr_annot"
                                                                                                                                                      :*
                                                                                                                                                        Nil))
                                                                                                                                              :*
                                                                                                                                                ((Record
                                                                                                                                                    "Dictionary")
                                                                                                                                                   (FieldInfo
                                                                                                                                                      "dict_mappings"
                                                                                                                                                      :*
                                                                                                                                                        (FieldInfo
                                                                                                                                                           "expr_annot"
                                                                                                                                                           :*
                                                                                                                                                             Nil))
                                                                                                                                                   :*
                                                                                                                                                     ((Record
                                                                                                                                                         "DictComp")
                                                                                                                                                        (FieldInfo
                                                                                                                                                           "dict_comprehension"
                                                                                                                                                           :*
                                                                                                                                                             (FieldInfo
                                                                                                                                                                "expr_annot"
                                                                                                                                                                :*
                                                                                                                                                                  Nil))
                                                                                                                                                        :*
                                                                                                                                                          ((Record
                                                                                                                                                              "Set")
                                                                                                                                                             (FieldInfo
                                                                                                                                                                "set_exprs"
                                                                                                                                                                :*
                                                                                                                                                                  (FieldInfo
                                                                                                                                                                     "expr_annot"
                                                                                                                                                                     :*
                                                                                                                                                                       Nil))
                                                                                                                                                             :*
                                                                                                                                                               ((Record
                                                                                                                                                                   "SetComp")
                                                                                                                                                                  (FieldInfo
                                                                                                                                                                     "set_comprehension"
                                                                                                                                                                     :*
                                                                                                                                                                       (FieldInfo
                                                                                                                                                                          "expr_annot"
                                                                                                                                                                          :*
                                                                                                                                                                            Nil))
                                                                                                                                                                  :*
                                                                                                                                                                    ((Record
                                                                                                                                                                        "Starred")
                                                                                                                                                                       (FieldInfo
                                                                                                                                                                          "starred_expr"
                                                                                                                                                                          :*
                                                                                                                                                                            (FieldInfo
                                                                                                                                                                               "expr_annot"
                                                                                                                                                                               :*
                                                                                                                                                                                 Nil))
                                                                                                                                                                       :*
                                                                                                                                                                         ((Record
                                                                                                                                                                             "Paren")
                                                                                                                                                                            (FieldInfo
                                                                                                                                                                               "paren_expr"
                                                                                                                                                                               :*
                                                                                                                                                                                 (FieldInfo
                                                                                                                                                                                    "expr_annot"
                                                                                                                                                                                    :*
                                                                                                                                                                                      Nil))
                                                                                                                                                                            :*
                                                                                                                                                                              ((Record
                                                                                                                                                                                  "StringConversion")
                                                                                                                                                                                 (FieldInfo
                                                                                                                                                                                    "backquoted_expr"
                                                                                                                                                                                    :*
                                                                                                                                                                                      (FieldInfo
                                                                                                                                                                                         "expr_anot"
                                                                                                                                                                                         :*
                                                                                                                                                                                           Nil))
                                                                                                                                                                                 :*
                                                                                                                                                                                   Nil))))))))))))))))))))))))))))))))
            SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))
              -> ((ADT "GHC.Types") (Name "Suite" :@: Name "SrcSpan"))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Expr" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Ident" :@: Name "SrcSpan"))
                   ((Record "Ident")
                      (FieldInfo "ident_string" :* (FieldInfo "ident_annot" :* Nil))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Parameter" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan")))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Argument" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]"
                       :@:
                         ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                            :@: (Name "Suite" :@: Name "SrcSpan"))))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "AssignOp" :@: Name "SrcSpan"))
                   ((Record "PlusAssign") (FieldInfo "assignOp_annot" :* Nil)
                      :*
                        ((Record "MinusAssign") (FieldInfo "assignOp_annot" :* Nil)
                           :*
                             ((Record "MultAssign") (FieldInfo "assignOp_annot" :* Nil)
                                :*
                                  ((Record "DivAssign") (FieldInfo "assignOp_annot" :* Nil)
                                     :*
                                       ((Record "ModAssign") (FieldInfo "assignOp_annot" :* Nil)
                                          :*
                                            ((Record "PowAssign")
                                               (FieldInfo "assignOp_annot" :* Nil)
                                               :*
                                                 ((Record "BinAndAssign")
                                                    (FieldInfo "assignOp_annot" :* Nil)
                                                    :*
                                                      ((Record "BinOrAssign")
                                                         (FieldInfo "assignOp_annot" :* Nil)
                                                         :*
                                                           ((Record "BinXorAssign")
                                                              (FieldInfo "assignOp_annot" :* Nil)
                                                              :*
                                                                ((Record "LeftShiftAssign")
                                                                   (FieldInfo "assignOp_annot"
                                                                      :* Nil)
                                                                   :*
                                                                     ((Record "RightShiftAssign")
                                                                        (FieldInfo "assignOp_annot"
                                                                           :* Nil)
                                                                        :*
                                                                          ((Record "FloorDivAssign")
                                                                             (FieldInfo
                                                                                "assignOp_annot"
                                                                                :* Nil)
                                                                             :*
                                                                               ((Record
                                                                                   "MatrixMultAssign")
                                                                                  (FieldInfo
                                                                                     "assignOp_annot"
                                                                                     :* Nil)
                                                                                  :*
                                                                                    Nil)))))))))))))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Decorator" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Handler" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "RaiseExpr" :@: Name "SrcSpan"))
                   (Constructor "RaiseV3" :* (Constructor "RaiseV2" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]"
                       :@:
                         ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                            :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan")))))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Ident" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe"
                       :@:
                         ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                            :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan")))))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "ImportItem" :@: Name "SrcSpan"))
                   ((Record "ImportItem")
                      (FieldInfo "import_item_name"
                         :*
                           (FieldInfo "import_as_name"
                              :* (FieldInfo "import_item_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))
              -> ((ADT "GHC.Types") (Name "DottedName" :@: Name "SrcSpan"))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe" :@: (Name "Ident" :@: Name "SrcSpan")))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe" :@: (Name "DottedName" :@: Name "SrcSpan")))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "FromItem" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "FromItem" :@: Name "SrcSpan"))
                   ((Record "FromItem")
                      (FieldInfo "from_item_name"
                         :*
                           (FieldInfo "from_as_name" :* (FieldInfo "from_item_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))
              -> ((ADT "GHC.Types") (Name "[]" :@: Name "String"))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "Slice" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Op" :@: Name "SrcSpan"))
                   ((Record "And") (FieldInfo "op_annot" :* Nil)
                      :*
                        ((Record "Or") (FieldInfo "op_annot" :* Nil)
                           :*
                             ((Record "Not") (FieldInfo "op_annot" :* Nil)
                                :*
                                  ((Record "Exponent") (FieldInfo "op_annot" :* Nil)
                                     :*
                                       ((Record "LessThan") (FieldInfo "op_annot" :* Nil)
                                          :*
                                            ((Record "GreaterThan") (FieldInfo "op_annot" :* Nil)
                                               :*
                                                 ((Record "Equality") (FieldInfo "op_annot" :* Nil)
                                                    :*
                                                      ((Record "GreaterThanEquals")
                                                         (FieldInfo "op_annot" :* Nil)
                                                         :*
                                                           ((Record "LessThanEquals")
                                                              (FieldInfo "op_annot" :* Nil)
                                                              :*
                                                                ((Record "NotEquals")
                                                                   (FieldInfo "op_annot" :* Nil)
                                                                   :*
                                                                     ((Record "NotEqualsV2")
                                                                        (FieldInfo "op_annot"
                                                                           :* Nil)
                                                                        :*
                                                                          ((Record "In")
                                                                             (FieldInfo "op_annot"
                                                                                :* Nil)
                                                                             :*
                                                                               ((Record "Is")
                                                                                  (FieldInfo
                                                                                     "op_annot"
                                                                                     :* Nil)
                                                                                  :*
                                                                                    ((Record
                                                                                        "IsNot")
                                                                                       (FieldInfo
                                                                                          "op_annot"
                                                                                          :* Nil)
                                                                                       :*
                                                                                         ((Record
                                                                                             "NotIn")
                                                                                            (FieldInfo
                                                                                               "op_annot"
                                                                                               :*
                                                                                                 Nil)
                                                                                            :*
                                                                                              ((Record
                                                                                                  "BinaryOr")
                                                                                                 (FieldInfo
                                                                                                    "op_annot"
                                                                                                    :*
                                                                                                      Nil)
                                                                                                 :*
                                                                                                   ((Record
                                                                                                       "Xor")
                                                                                                      (FieldInfo
                                                                                                         "op_annot"
                                                                                                         :*
                                                                                                           Nil)
                                                                                                      :*
                                                                                                        ((Record
                                                                                                            "BinaryAnd")
                                                                                                           (FieldInfo
                                                                                                              "op_annot"
                                                                                                              :*
                                                                                                                Nil)
                                                                                                           :*
                                                                                                             ((Record
                                                                                                                 "ShiftLeft")
                                                                                                                (FieldInfo
                                                                                                                   "op_annot"
                                                                                                                   :*
                                                                                                                     Nil)
                                                                                                                :*
                                                                                                                  ((Record
                                                                                                                      "ShiftRight")
                                                                                                                     (FieldInfo
                                                                                                                        "op_annot"
                                                                                                                        :*
                                                                                                                          Nil)
                                                                                                                     :*
                                                                                                                       ((Record
                                                                                                                           "Multiply")
                                                                                                                          (FieldInfo
                                                                                                                             "op_annot"
                                                                                                                             :*
                                                                                                                               Nil)
                                                                                                                          :*
                                                                                                                            ((Record
                                                                                                                                "Plus")
                                                                                                                               (FieldInfo
                                                                                                                                  "op_annot"
                                                                                                                                  :*
                                                                                                                                    Nil)
                                                                                                                               :*
                                                                                                                                 ((Record
                                                                                                                                     "Minus")
                                                                                                                                    (FieldInfo
                                                                                                                                       "op_annot"
                                                                                                                                       :*
                                                                                                                                         Nil)
                                                                                                                                    :*
                                                                                                                                      ((Record
                                                                                                                                          "Divide")
                                                                                                                                         (FieldInfo
                                                                                                                                            "op_annot"
                                                                                                                                            :*
                                                                                                                                              Nil)
                                                                                                                                         :*
                                                                                                                                           ((Record
                                                                                                                                               "FloorDivide")
                                                                                                                                              (FieldInfo
                                                                                                                                                 "op_annot"
                                                                                                                                                 :*
                                                                                                                                                   Nil)
                                                                                                                                              :*
                                                                                                                                                ((Record
                                                                                                                                                    "MatrixMult")
                                                                                                                                                   (FieldInfo
                                                                                                                                                      "op_annot"
                                                                                                                                                      :*
                                                                                                                                                        Nil)
                                                                                                                                                   :*
                                                                                                                                                     ((Record
                                                                                                                                                         "Invert")
                                                                                                                                                        (FieldInfo
                                                                                                                                                           "op_annot"
                                                                                                                                                           :*
                                                                                                                                                             Nil)
                                                                                                                                                        :*
                                                                                                                                                          ((Record
                                                                                                                                                              "Modulo")
                                                                                                                                                             (FieldInfo
                                                                                                                                                                "op_annot"
                                                                                                                                                                :*
                                                                                                                                                                  Nil)
                                                                                                                                                             :*
                                                                                                                                                               Nil))))))))))))))))))))))))))))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe" :@: (Name "YieldArg" :@: Name "SrcSpan")))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Comprehension" :@: Name "SrcSpan"))
                   ((Record "Comprehension")
                      (FieldInfo "comprehension_expr"
                         :*
                           (FieldInfo "comprehension_for"
                              :* (FieldInfo "comprehension_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "DictKeyDatumList" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Argument" :@: Name "SrcSpan"))
                   ((Record "ArgExpr")
                      (FieldInfo "arg_expr" :* (FieldInfo "arg_annot" :* Nil))
                      :*
                        ((Record "ArgVarArgsPos")
                           (FieldInfo "arg_expr" :* (FieldInfo "arg_annot" :* Nil))
                           :*
                             ((Record "ArgVarArgsKeyword")
                                (FieldInfo "arg_expr" :* (FieldInfo "arg_annot" :* Nil))
                                :*
                                  ((Record "ArgKeyword")
                                     (FieldInfo "arg_keyword"
                                        :* (FieldInfo "arg_expr" :* (FieldInfo "arg_annot" :* Nil)))
                                     :* Nil))))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Slice" :@: Name "SrcSpan"))
                   ((Record "SliceProper")
                      (FieldInfo "slice_lower"
                         :*
                           (FieldInfo "slice_upper"
                              :* (FieldInfo "slice_stride" :* (FieldInfo "slice_annot" :* Nil))))
                      :*
                        ((Record "SliceExpr")
                           (FieldInfo "slice_expr" :* (FieldInfo "slice_annot" :* Nil))
                           :*
                             ((Record "SliceEllipsis") (FieldInfo "slice_annot" :* Nil)
                                :* Nil)))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe"
                       :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan"))))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Parameter" :@: Name "SrcSpan"))
                   ((Record "Param")
                      (FieldInfo "param_name"
                         :*
                           (FieldInfo "param_py_annotation"
                              :*
                                (FieldInfo "param_default" :* (FieldInfo "param_annot" :* Nil))))
                      :*
                        ((Record "VarArgsPos")
                           (FieldInfo "param_name"
                              :*
                                (FieldInfo "param_py_annotation"
                                   :* (FieldInfo "param_annot" :* Nil)))
                           :*
                             ((Record "VarArgsKeyword")
                                (FieldInfo "param_name"
                                   :*
                                     (FieldInfo "param_py_annotation"
                                        :* (FieldInfo "param_annot" :* Nil)))
                                :*
                                  ((Record "EndPositional") (FieldInfo "param_annot" :* Nil)
                                     :*
                                       ((Record "UnPackTuple")
                                          (FieldInfo "param_unpack_tuple"
                                             :*
                                               (FieldInfo "param_default"
                                                  :* (FieldInfo "param_annot" :* Nil)))
                                          :* Nil)))))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "ParamTuple" :@: Name "SrcSpan"))
                   ((Record "ParamTupleName")
                      (FieldInfo "param_tuple_name"
                         :* (FieldInfo "param_tuple_annot" :* Nil))
                      :*
                        ((Record "ParamTuple")
                           (FieldInfo "param_tuple" :* (FieldInfo "param_tuple_annot" :* Nil))
                           :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Types")
                    (Name "[]" :@: (Name "ParamTuple" :@: Name "SrcSpan")))
                   (Constructor "[]" :* (((Infix ":") RightAssociative) 5 :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "YieldArg" :@: Name "SrcSpan"))
                   (Constructor "YieldFrom" :* (Constructor "YieldExpr" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "ComprehensionExpr" :@: Name "SrcSpan"))
                   (Constructor "ComprehensionExpr"
                      :* (Constructor "ComprehensionDict" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "CompFor" :@: Name "SrcSpan"))
                   ((Record "CompFor")
                      (FieldInfo "comp_for_async"
                         :*
                           (FieldInfo "comp_for_exprs"
                              :*
                                (FieldInfo "comp_in_expr"
                                   :*
                                     (FieldInfo "comp_for_iter"
                                        :* (FieldInfo "comp_for_annot" :* Nil)))))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "DictKeyDatumList" :@: Name "SrcSpan"))
                   (Constructor "DictMappingPair"
                      :* (Constructor "DictUnpacking" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe" :@: (Name "CompIter" :@: Name "SrcSpan")))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "CompIter" :@: Name "SrcSpan"))
                   ((Record "IterFor")
                      (FieldInfo "comp_iter_for" :* (FieldInfo "comp_iter_annot" :* Nil))
                      :*
                        ((Record "IterIf")
                           (FieldInfo "comp_iter_if" :* (FieldInfo "comp_iter_annot" :* Nil))
                           :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "CompIf" :@: Name "SrcSpan"))
                   ((Record "CompIf")
                      (FieldInfo "comp_if"
                         :*
                           (FieldInfo "comp_if_iter" :* (FieldInfo "comp_if_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Tuple")
                    ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                       :@: (Name "Suite" :@: Name "SrcSpan")))
                   (Constructor "(,)" :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Decorator" :@: Name "SrcSpan"))
                   ((Record "Decorator")
                      (FieldInfo "decorator_name"
                         :*
                           (FieldInfo "decorator_args"
                              :* (FieldInfo "decorator_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "Handler" :@: Name "SrcSpan"))
                   ((Record "Handler")
                      (FieldInfo "handler_clause"
                         :*
                           (FieldInfo "handler_suite" :* (FieldInfo "handler_annot" :* Nil)))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "Language.Python.Common.AST")
                    (Name "ExceptClause" :@: Name "SrcSpan"))
                   ((Record "ExceptClause")
                      (FieldInfo "except_clause"
                         :* (FieldInfo "except_clause_annot" :* Nil))
                      :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Tuple")
                    ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                       :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan"))))
                   (Constructor "(,)" :* Nil)
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ)))))))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Maybe")
                    (Name "Maybe"
                       :@:
                         ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                            :@:
                              (Name "Maybe"
                                 :@:
                                   ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                                      :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan")))))))
                   (Constructor "Nothing" :* (Constructor "Just" :* Nil))
            SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS (SS SZ))))))))))))))))))))))))))))))))))))))))))))))))))))
              -> ((ADT "GHC.Tuple")
                    ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                       :@:
                         (Name "Maybe"
                            :@:
                              ((Name "(,)" :@: (Name "Expr" :@: Name "SrcSpan"))
                                 :@: (Name "Maybe" :@: (Name "Expr" :@: Name "SrcSpan"))))))
                   (Constructor "(,)" :* Nil)
